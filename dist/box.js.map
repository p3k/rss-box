{"version":3,"file":"box.js","sources":["../node_modules/domready/ready.js","../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/local.js","../src/urls.js","../src/error.js","../src/rss-parser.js","../src/status-codes.js","../src/stores.js","../src/components/Box.html","../src/box.js","../src/native.js"],"sourcesContent":["/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  if (typeof module != 'undefined') module.exports = definition()\n  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n  else this[name] = definition()\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\n\n  if (!loaded)\n  doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener)\n    loaded = 1\n    while (listener = fns.shift()) listener()\n  })\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn)\n  }\n\n});\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.37.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","const mode = '__BUILD_MODE__';\n\nexport const urls = {};\n\n// Note: better not to use ES6 features here\n\nif (mode === 'prod') {\n  urls.app = 'https://p3k.org/rss';\n  urls.proxy = 'https://p3k.org/json/roxy';\n  urls.referrers = 'https://p3k.org/json/ferris?group=rss-box';\n  urls.feed = 'https://blog.p3k.org/stories.xml';\n} else {\n  // urls.feed = urls.app + '/test/sampleRssAtom.xml';\n  // urls.feed = 'http://www.artsjournal.com/artsjournal1/music.xml';\n}\n","import { urls as localUrls } from './local';\n\nexport const baseUrl = 'http://localhost';\n\nexport const urls = {\n  app: baseUrl + ':8000',\n  proxy: baseUrl + ':8000/roxy',\n  referrers: baseUrl + ':8000/ferris?group=rss-box',\n  feed: 'https://blog.p3k.org/stories.xml'\n};\n\nObject.keys(localUrls).forEach(key => {\n  if (key in urls) urls[key] = localUrls[key];\n});\n","import { urls } from './urls';\n\nconst defaultError = {\n  loading: false,\n  compact: false,\n  maxItems: 3,\n  format: 'Error',\n  version: '❌',\n  title: 'RSS Box Error',\n  description:\n    'This output was automatically generated to report an error that occurred during a request to the RSS Box Viewer.',\n  image: '',\n  items: [\n    {\n      title: 'Oops, something went wrong…',\n      description: 'An error occurred while processing the request to the RSS Box Viewer.'\n    },\n    {\n      title: 'The following error message was returned:',\n      description: 'Unknown error'\n    },\n    { title: '' }\n  ]\n};\n\nexport default function(url, message) {\n  const error = Object.assign({}, defaultError);\n  error.link = urls.app + '?url=' + url;\n  error.items[1].description = message;\n  error.items[2].description = `Most likely, this might have happened because of a non-existent or invalid RSS feed URL. <a href=\"https://validator.w3.org/feed/check.cgi?url=${url}\">Please check</a> and possibly correct your input, then try again.`;\n  return error;\n}\n","function RssParser() {\n  const DC_NAMESPACE = 'http://purl.org/dc/elements/1.1/';\n  const RDF_NAMESPACE = 'http://www.w3.org/1999/02/22-rdf-syntax-ns#';\n  const ISO_DATE_PATTERN = /([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9:]+).*$/;\n\n  const getDocument = function(xml) {\n    if (!xml) return;\n\n    let doc;\n\n    if (document.implementation.createDocument) {\n      const parser = new DOMParser();\n      doc = parser.parseFromString(xml, 'application/xml');\n    } else if (window.ActiveXObject) {\n      doc = new window.ActiveXObject('Microsoft.XMLDOM');\n      doc.async = 'false';\n      doc.loadXML(xml);\n    }\n\n    return doc;\n  };\n\n  const getChildElement = function(name, parent, namespace) {\n    if (!name || !parent) return null;\n    let method = 'getElementsByTagName';\n    if (namespace) method += 'NS';\n    return parent[method](name, namespace)[0];\n  };\n\n  const getText = function(node) {\n    if (!node) return '';\n    if (node.length) node = node[0];\n    return node.textContent;\n  };\n\n  const error = Error('Malformed RSS syntax');\n\n  const parseRss = function(root, type) {\n    const rss = { items: [] };\n    const channel = getChildElement('channel', root);\n\n    if (!channel) throw error;\n\n    rss.format = 'RSS';\n    rss.version = type === 'rdf:RDF' ? '1.0' : root.getAttribute('version');\n    rss.title = getText(getChildElement('title', channel));\n    rss.description = getText(getChildElement('description', channel));\n    rss.link = getText(getChildElement('link', channel));\n\n    const image = getChildElement('image', channel);\n\n    rss.image = image\n      ? {\n          source: getText(getChildElement('url', image)) || image.getAttributeNS(RDF_NAMESPACE, 'resource'),\n          title: getText(getChildElement('title', image)),\n          link: getText(getChildElement('link', image)),\n          width: getText(getChildElement('width', image)),\n          height: getText(getChildElement('height', image)),\n          description: getText(getChildElement('description', image))\n        }\n      : '';\n\n    if (type === 'rdf:RDF') {\n      const date = channel.getElementsByTagNameNS(DC_NAMESPACE, 'date');\n      rss.date = getDate(getText(date));\n      rss.rights = getText(channel.getElementsByTagNameNS(DC_NAMESPACE, 'creator'));\n\n      const textInput = getChildElement('textinput', root);\n\n      rss.input = textInput\n        ? {\n            link: getText(getChildElement('link', textInput)),\n            description: getText(getChildElement('description', textInput)),\n            name: getText(getChildElement('name', textInput)),\n            title: getText(getChildElement('title', textInput))\n          }\n        : '';\n    } else {\n      rss.date = getDate(\n        getText(getChildElement('lastBuildDate', channel)) || getText(getChildElement('pubDate', channel))\n      );\n      rss.rights = getText(getChildElement('copyright', channel));\n    }\n\n    // Create a native Array from HTMLCollection\n    const items = Array.apply(null, root.getElementsByTagName('item'));\n\n    items.forEach(node => {\n      const item = {\n        title: getText(getChildElement('title', node)),\n        description: getText(getChildElement('description', node)),\n        link: getText(getChildElement('link', node)) || getText(getChildElement('guid', node))\n      };\n\n      if (!item.description) {\n        let content = getText(getChildElement('encoded', node, 'content'));\n        if (content) {\n          item.description = content;\n        } else {\n          content = getText(getChildElement('encoded', node));\n          if (content) {\n            item.description = content;\n          }\n        }\n      }\n\n      addItemExtensions(node, item);\n      rss.items.push(item);\n    });\n\n    return rss;\n  };\n\n  const parseAtom = function(root) {\n    const rss = { items: [] };\n\n    rss.format = 'Atom';\n    rss.version = '1.0';\n    rss.title = getText(getChildElement('title', root));\n    rss.description = getText(getChildElement('subtitle', root));\n    rss.image = '';\n\n    const link = getChildElement('link:not([self])', root);\n    if (link) rss.link = link.getAttribute('href');\n\n    rss.date = getDate(getChildElement('updated', root));\n\n    const entries = Array.apply(null, root.getElementsByTagName('entry'));\n\n    entries.forEach(node => {\n      const item = {\n        title: getText(getChildElement('title', node)),\n        description: getText(getChildElement('summary', node))\n      };\n\n      const link = getChildElement('link', node);\n      if (link) item.link = link.getAttribute('href');\n\n      rss.items.push(item);\n    });\n\n    return rss;\n  };\n\n  const parseScriptingNews = function(root) {\n    const rss = { items: [] };\n    const channel = getChildElement('header', root);\n\n    if (!channel) throw error;\n\n    rss.format = 'Scripting News';\n    rss.version = getText(getChildElement('scriptingNewsVersion', channel));\n    rss.title = getText(getChildElement('channelTitle', channel));\n    rss.description = getText(getChildElement('channelDescription', channel));\n    rss.link = getText(getChildElement('channelLink', channel));\n\n    rss.date = getDate(\n      getText(getChildElement('lastBuildDate', channel)) || getText(getChildElement('pubDate', channel))\n    );\n\n    const imageUrl = getChildElement('imageUrl', channel);\n\n    if (imageUrl) {\n      rss.image = {\n        source: getText(imageUrl),\n        title: getText(getChildElement('imageTitle', channel)),\n        link: getText(getChildElement('imageLink', channel)),\n        width: getText(getChildElement('imageWidth', channel)),\n        height: getText(getChildElement('imageHeight', channel)),\n        description: getText(getChildElement('imageCaption', channel))\n      };\n    }\n\n    const items = Array.apply(null, root.getElementsByTagName('item'));\n\n    items.forEach(node => {\n      const item = { title: '' };\n\n      item.description = getText(getChildElement('text', node)).replace(/\\n/g, ' ');\n\n      const link = getChildElement('link', node);\n\n      if (link) {\n        const text = getText(getChildElement('linetext', link))\n          .replace(/\\n/g, ' ')\n          .trim();\n        if (text) {\n          item.description = item.description.replace(\n            new RegExp(text),\n            '<a href=\"' + getText(getChildElement('url', node)) + '\">' + text + '</a>'\n          );\n        }\n        item.link = getText(getChildElement('url', link));\n      }\n\n      addItemExtensions(node, item);\n      rss.items.push(item);\n    });\n\n    return rss;\n  };\n\n  const addItemExtensions = function(node, item) {\n    const source = getChildElement('source', node);\n    // Create a native Array from HTMLCollection\n    const enclosures = Array.apply(null, node.getElementsByTagName('enclosure'));\n    const category = getChildElement('category', node);\n\n    if (source) {\n      item.source = {\n        url: source.getAttribute('url'),\n        title: source.textContent\n      };\n    }\n\n    item.enclosures = enclosures.map(enclosure => {\n      return {\n        url: enclosure.getAttribute('url'),\n        length: enclosure.getAttribute('length'),\n        type: enclosure.getAttribute('type')\n      };\n    });\n\n    if (category) {\n      item.category = {\n        domain: category.getAttribute('domain') || '',\n        content: category.textContent\n      };\n    }\n\n    return item;\n  };\n\n  const getDate = function(str) {\n    let millis = Date.parse(str);\n\n    if (isNaN(millis)) {\n      millis = Date.parse(String(str).replace(ISO_DATE_PATTERN, '$1/$2/$3 $4'));\n      if (isNaN(millis)) millis = Date.now();\n    }\n\n    return new Date(millis);\n  };\n\n  return {\n    parse: function(xml) {\n      const doc = getDocument(xml);\n\n      if (!doc || getChildElement('parsererror', doc.documentElement)) throw error;\n\n      const root = doc.documentElement;\n      const type = root.nodeName;\n\n      switch (type) {\n        case 'feed':\n          return parseAtom(root);\n\n        case 'scriptingNews':\n          return parseScriptingNews(root);\n\n        default:\n          return parseRss(root, type);\n      }\n    }\n  };\n}\n\nexport { RssParser };\n","export default {\"100\":\"Continue\",\"101\":\"Switching Protocols\",\"102\":\"Processing\",\"103\":\"Early Hints\",\"200\":\"OK\",\"201\":\"Created\",\"202\":\"Accepted\",\"203\":\"Non-Authoritative Information\",\"204\":\"No Content\",\"205\":\"Reset Content\",\"206\":\"Partial Content\",\"207\":\"Multi-Status\",\"208\":\"Already Reported\",\"226\":\"IM Used\",\"300\":\"Multiple Choices\",\"301\":\"Moved Permanently\",\"302\":\"Found\",\"303\":\"See Other\",\"304\":\"Not Modified\",\"305\":\"Use Proxy\",\"307\":\"Temporary Redirect\",\"308\":\"Permanent Redirect\",\"400\":\"Bad Request\",\"401\":\"Unauthorized\",\"402\":\"Payment Required\",\"403\":\"Forbidden\",\"404\":\"Not Found\",\"405\":\"Method Not Allowed\",\"406\":\"Not Acceptable\",\"407\":\"Proxy Authentication Required\",\"408\":\"Request Timeout\",\"409\":\"Conflict\",\"410\":\"Gone\",\"411\":\"Length Required\",\"412\":\"Precondition Failed\",\"413\":\"Payload Too Large\",\"414\":\"URI Too Long\",\"415\":\"Unsupported Media Type\",\"416\":\"Range Not Satisfiable\",\"417\":\"Expectation Failed\",\"418\":\"I'm a Teapot\",\"421\":\"Misdirected Request\",\"422\":\"Unprocessable Entity\",\"423\":\"Locked\",\"424\":\"Failed Dependency\",\"425\":\"Too Early\",\"426\":\"Upgrade Required\",\"428\":\"Precondition Required\",\"429\":\"Too Many Requests\",\"431\":\"Request Header Fields Too Large\",\"451\":\"Unavailable For Legal Reasons\",\"500\":\"Internal Server Error\",\"501\":\"Not Implemented\",\"502\":\"Bad Gateway\",\"503\":\"Service Unavailable\",\"504\":\"Gateway Timeout\",\"505\":\"HTTP Version Not Supported\",\"506\":\"Variant Also Negotiates\",\"507\":\"Insufficient Storage\",\"508\":\"Loop Detected\",\"509\":\"Bandwidth Limit Exceeded\",\"510\":\"Not Extended\",\"511\":\"Network Authentication Required\"}\n","import { readable, writable } from 'svelte/store';\n\nimport error from './error';\nimport { RssParser } from './rss-parser';\nimport { urls } from './urls';\nimport { description, version } from '../package.json';\nimport statusCodes from './status-codes';\n\nconst ObjectStore = defaultState => {\n  const { subscribe, update } = writable(defaultState);\n\n  const _update = newState =>\n    update(state => {\n      Object.keys(newState).forEach(key => {\n        if (key in state === false) return;\n        state[key] = newState[key];\n        // See https://svelte.dev/tutorial/updating-arrays-and-objects\n        state = state;\n      });\n\n      return state;\n    });\n\n  return {\n    subscribe,\n    update: _update,\n    set: _update\n  };\n};\n\nfunction fetchFeed(url) {\n  if (!url) return;\n\n  const store = this;\n\n  store.set({ loading: true });\n\n  const headers = new Headers({\n    Accept: [\n      'application/rss+xml',\n      'application/rdf+xml',\n      'application/atom+xml',\n      'application/xml;q=0.9',\n      'text/xml;q=0.8'\n    ].join()\n  });\n\n  fetch(urls.proxy + '?url=' + encodeURIComponent(url), { headers, referrerPolicy: 'no-referrer' })\n    .then(res => {\n      if (res.status > 399) throw Error(statusCodes[res.status]);\n      return res.json();\n    })\n    .then(data => {\n      const parser = RssParser();\n      const rss = parser.parse(data.content);\n\n      if (!rss.date) rss.date = new Date(data.headers.date);\n\n      store.set({ ...rss, loading: false });\n    })\n    .catch(message => {\n      store.set(error(url, message));\n      console.error(message);\n    });\n}\n\nfunction fetchReferrers() {\n  const store = this;\n\n  fetch(urls.referrers)\n    .then(res => res.json())\n    .then(data => {\n      const hosts = data.reduce((accu, item) => {\n        if (item.url.startsWith('http') && !item.url.startsWith(urls.app)) {\n          const url = item.url.replace(/^([^.]*)www\\./, '$1');\n          const host = url.split('/')[2];\n          let data = accu[host];\n\n          if (!data) {\n            data = { host, url, hits: item.hits, total: 0 };\n            accu[host] = data;\n            accu.push(data);\n          } else if (item.hits > data.hits) {\n            data.url = item.url;\n            data.hits = item.hits;\n          }\n\n          data.total += item.hits;\n          data.metadata = item.metadata || { feedUrls: [] };\n        }\n        return accu;\n      }, []);\n\n      const total = hosts.reduce((accu, item) => accu += item.total, 0);\n\n      const referrers = hosts.map(item => {\n        item.percentage = (item.total / total) * 100;\n        return item;\n      });\n\n      referrers.sort((a, b) => b.percentage - a.percentage);\n      store.set(referrers);\n    });\n}\n\nexport const formatDate = date => {\n  if (!date) return;\n\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n\n  const day = date\n    .getDate()\n    .toString()\n    .padStart(2, '0');\n\n  const hours = date\n    .getHours()\n    .toString()\n    .padStart(2, '0');\n\n  const minutes = date\n    .getMinutes()\n    .toString()\n    .padStart(2, '0');\n\n  return `${date.getFullYear()}-${month}-${day}, ${hours}:${minutes}h`;\n};\n\nexport const ConfigStore = () => {\n  const store = ObjectStore({\n    align: 'initial',\n    boxFillColor: '#ffead2',\n    compact: false,\n    fontFace: '10pt sans-serif',\n    frameColor: '#b3a28e',\n    headless: false,\n    height: '',\n    linkColor: '#2c7395',\n    maxItems: 7,\n    radius: 5,\n    showXmlButton: true,\n    textColor: '#95412b',\n    titleBarColor: '#90a8b3',\n    titleBarTextColor: '#ffead2',\n    url: '',\n    width: ''\n  });\n\n  return store;\n};\n\nexport const FeedStore = () => {\n  const store = ObjectStore({\n    date: new Date(),\n    description: '',\n    format: '',\n    image: '',\n    input: '',\n    items: [],\n    link: '',\n    loading: false,\n    title: '',\n    version: ''\n  });\n\n  store.fetch = fetchFeed.bind(store);\n  store.formatDate = formatDate.bind(store);\n  return store;\n};\n\nexport const app = readable({ description, version });\nexport const config = ConfigStore();\nexport const feed = FeedStore();\nexport const referrers = writable([]);\n\nreferrers.fetch = fetchReferrers.bind(referrers);\n\n// For debugging\n//window.stores = { app, config, feed, referrers };\n","<script>\n  import { onMount } from 'svelte';\n  import { urls } from '../urls';\n\n  import LinkIcon from './LinkIcon.html';\n  import RssIcon from './RssIcon.html';\n  import PaperclipIcon from './PaperclipIcon.html';\n\n  // Stores coming in via props\n  export let feed;\n  export let config;\n\n  onMount(() => {\n    const staticId = 'rssbox-static-stylesheet';\n    const dynamicId = 'rssbox-dynamic-stylesheet';\n\n    let staticCss = window[staticId];\n    let dynamicCss = window[dynamicId];\n\n    if (!staticCss) {\n      staticCss = document.createElement('link');\n      staticCss.id = staticId;\n      staticCss.rel = 'stylesheet';\n      staticCss.href = urls.app + '/box.css';\n      document.head.appendChild(staticCss);\n    }\n\n    if (!dynamicCss) {\n      dynamicCss = document.createElement('style');\n      dynamicCss.id = dynamicId;\n      document.head.appendChild(dynamicCss);\n    }\n\n    config.subscribe(state => {\n      const color = state.linkColor;\n\n      if (!color) return;\n\n      let rule =\n        `.rssbox[data-link-color=\"${ color }\"] a {\n          color: ${ color };\n        }`;\n\n      if (dynamicCss.innerHTML.indexOf(rule) < 0) dynamicCss.innerHTML += rule;\n    });\n  });\n\n  function kb(bytes) {\n    return (bytes / 1000).toFixed(2) + '\\u200akB';\n  }\n\n  function load(data) {\n    return new Promise(fulfill => {\n      const image = new Image();\n\n      image.onload = () => {\n        const maxWidth = Math.min(100, image.width);\n        const factor = image.width > maxWidth ? maxWidth / image.width : 1;\n\n        fulfill({\n          width: (image.width * factor) + 'px',\n          height: (image.height * factor) + 'px'\n        });\n      };\n\n      image.src = data.source;\n    });\n  }\n\n  $: height = $config.height && $config.height > -1 ? $config.height + 'px' : '100%';\n  $: width = $config.width ? $config.width + 'px' : '100%';\n  $: itemTitleClass = !$config.compact ? 'bold' : '';\n</script>\n\n<style>\n  .rssbox {\n    box-sizing: border-box;\n    width: 100%;\n    border: 1px solid #000;\n    font-family: sans-serif;\n    overflow: hidden;\n    border-radius: 0;\n    -moz-border-radius: 0;\n  }\n\n  .rssbox-icon {\n    float: right;\n    width: 1em;\n    margin-left: 0.5em;\n  }\n\n  .rssbox-titlebar {\n    padding: 0.5em;\n    color: #000;\n    background-color: #add8e6;\n    border-bottom: 1px solid #000;\n    font-weight: bold;\n    letter-spacing: 0.01em;\n  }\n\n  .rssbox-date {\n    margin-top: 0.2em;\n    font-size: 0.8em;\n    font-weight: normal;\n  }\n\n  .rssbox-content {\n    height: auto;\n    padding: 0.5em;\n    overflow-x: hidden;\n    overflow-y: auto;\n    background-color: #fff;\n    clear: both;\n    -ms-overflow-style: -ms-autohiding-scrollbar;\n  }\n\n  .rssbox-content aside {\n    clear: both;\n    float: right;\n  }\n\n  .rssbox-content aside a {\n    display: block;\n    margin-left: 0.5em;\n  }\n\n  .rssbox-image {\n    float: right;\n    margin: 0 0 0.5em 0.5em;\n    background-position: left center;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  .rssbox-item-title.bold {\n    font-weight: bold;\n  }\n\n  .rssbox-enclosure, .rssbox-source {\n    display: block;\n    width: 1em;\n  }\n\n  .rssbox-form {\n    margin-bottom: 0.8em;\n  }\n\n  .rssbox-form input {\n    padding: 0.5em;\n    background-color: #fff;\n  }\n\n  .rssbox-promo {\n    text-align: right;\n    font-size: 0.7em;\n    letter-spacing: 0.01em;\n  }\n</style>\n\n<div data-link-color='{ $config.linkColor }' class='rssbox rssBox' style='max-width: { width }; border-color: { $config.frameColor }; border-radius: { $config.radius }px; font: { $config.fontFace }; float: { $config.align };'>\n  { #if !$config.headless }\n    <div class='rssbox-titlebar' style='color: { $config.titleBarTextColor }; background-color: { $config.titleBarColor }; border-bottom-color: { $config.frameColor };'>\n      { #if $config.showXmlButton }\n        <div class='rssbox-icon'>\n          <a href='{ $config.url }' title='{ $feed.format } { $feed.version }' style='color: { $config.titleBarTextColor }'>\n            <RssIcon/>\n          </a>\n        </div>\n      { /if }\n      <div>\n        <a href='{ $feed.link }' style='color: { $config.titleBarTextColor };'>\n          { $feed.title }\n        </a>\n      </div>\n      <div class='rssbox-date'>\n        { feed.formatDate($feed.date) }\n      </div>\n    </div>\n  { /if }\n\n  <div class='rssbox-content rssBoxContent' style='background-color: { $config.boxFillColor }; height: { height };'>\n    { #if $feed.image && !$config.compact }\n      { #await load($feed.image) then image }\n        <a href='{ $feed.image.link }' title='{ $feed.image.title }'>\n          <div alt='{ $feed.image.description }' class='rssbox-image' style='background-image: url({ $feed.image.source }); width: { image.width }; height: { image.height };'></div>\n        </a>\n      { /await }\n    { /if }\n\n    { #each $feed.items as item, index }\n      { #if index < $config.maxItems }\n        <div class='rssbox-item-content rssBoxItemContent' style='color: { $config.textColor }'>\n          { #if item.title }\n            <div class='rssbox-item-title { itemTitleClass }'>\n              { #if item.link }\n                <a href='{ item.link }'>\n                  {@html item.title }\n                </a>\n              { :else }\n                {@html item.title }\n              { /if }\n            </div>\n          { /if }\n\n          { #if !$config.compact }\n            <aside>\n              { #if item.source }\n                <a href='{ item.source.url }' title='{ item.source.title }' class='rssbox-source'>\n                  { #if item.source.url.endsWith('.xml') }\n                    <RssIcon/>\n                  { :else }\n                    <LinkIcon/>\n                  { /if }\n                </a>\n              { /if }\n\n              { #if item.enclosures }\n                { #each item.enclosures as enclosure }\n                  <a href='{ enclosure.url }' title='{ kb(enclosure.length) } { enclosure.type }' class='rssbox-enclosure'>\n                    <PaperclipIcon/>\n                  </a>\n                { /each }\n              { /if }\n            </aside>\n            {@html item.description }\n          { /if }\n        </div>\n      { /if }\n    { /each }\n\n    { #if $feed.input }\n      <form class='rssbox-form' method='get' action='{ $feed.input.link }'>\n        <input type='text' name='{ $feed.input.name }' placeholder='Enter search &amp; hit return…' data-placeholder='{ $feed.input.description }'>\n      </form>\n    { /if }\n    <div class='rssbox-promo rssBoxPromo'>\n      <a href='{ urls.app }' style='color: { $config.textColor }'>RSS Box by p3k.org</a>\n    </div>\n  </div>\n</div>\n","import ready from 'domready';\n\nimport { ConfigStore, FeedStore } from './stores';\nimport { urls } from './urls';\nimport getNativeObject from './native.js';\n\nimport Box from './components/Box.html';\n\n// These are backwards-compatible settings\nconst defaults = {\n  align: 'initial',\n  boxFillColor: '#fff',\n  compact: false,\n  fontFace: 'inherit',\n  frameColor: '#000',\n  headless: false,\n  height: '',\n  linkColor: '',\n  maxItems: 7,\n  radius: 0,\n  showXmlButton: false,\n  textColor: '#000',\n  titleBarColor: '#add8e6',\n  titleBarTextColor: '#000',\n  width: '200'\n};\n\nconst keys = [...Object.keys(defaults), 'url'];\n\nready(() => {\n  const reduce = getNativeObject('Array').prototype.reduce;\n\n  const getNativeValue = value => {\n    if (value === 'true') return true;\n    if (value === 'false') return false;\n    return value;\n  };\n\n  const parseQuery = query => {\n    const parts = query.split('&');\n    return reduce.call(\n      parts,\n      (data, pair) => {\n        const [key, value] = pair.split('=');\n        if (keys.indexOf(key) > -1) {\n          data[key] = getNativeValue(decodeURIComponent(value));\n        }\n        return data;\n      },\n      {}\n    );\n  };\n\n  // Earlier versions used protocol-less URLs like `//p3k.org/rss`\n  const search = urls.app.replace(/^https?:/, '');\n  const scripts = Array.apply(null, document.querySelectorAll('script[src*=\"' + search + '\"]'));\n  const feedUrls = [];\n\n  scripts.forEach(script => {\n    const query = script.src.split('?')[1];\n\n    if (!query) return;\n\n    let data = parseQuery(query);\n\n    if (!data.url) data.url = urls.feed;\n\n    data = Object.assign({}, defaults, data);\n\n    // Create new stores for each box to prevent multiple boxes getting the same data\n    const feed = FeedStore();\n    const config = ConfigStore();\n\n    config.set(data);\n    feed.fetch(data.url, feed);\n\n    const parent = script.parentNode;\n    const container = document.createElement('div');\n\n    parent.insertBefore(container, script);\n\n    void new Box({\n      target: container,\n      props: { feed, config }\n    });\n\n    // Only for IE11\n    script.parentNode.removeChild(script);\n\n    if (data.url !== urls.feed && feedUrls.indexOf(data.url) < 0) {\n      feedUrls.push(data.url);\n    }\n  });\n\n  if (location.href.indexOf(urls.app) < 0) {\n    const metadata = JSON.stringify({ feedUrls });\n    fetch(urls.referrers + '&url=' + encodeURIComponent(location.href) + '&metadata=' + encodeURIComponent(metadata));\n  }\n});\n","// Retrieve native objects without any extensions (e.g. by PrototypeJS)\nexport default function getNativeObject(native) {\n  var iframe = document.createElement('iframe');\n  document.body.appendChild(iframe);\n  var retrieved = iframe.contentWindow[native];\n  document.body.removeChild(iframe);\n  return retrieved;\n}\n"],"names":["listener","fns","doc","hack","domContentLoaded","loaded","module","document","documentElement","doScroll","test","readyState","addEventListener","removeEventListener","shift","fn","setTimeout","push","noop","run","blank_object","Object","create","run_all","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","const","unsub","callbacks","unsubscribe","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","let","i","length","d","element","name","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","current_component","HtmlTag","this","e","n","set_current_component","component","get_current_component","Error","m","html","nodeName","t","h","innerHTML","Array","from","childNodes","p","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","ctx","after_update","outros","outroing","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","type","index","resolved","child_ctx","undefined","slice","current","needs_flush","blocks","mount","then","error","catch","hasCatch","pending","globals","window","globalThis","global","create_component","mount_component","customElement","new_on_destroy","on_mount","map","filter","on_destroy","destroy_component","make_dirty","fill","init","options","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","urls","baseUrl","app","proxy","referrers","feed","localUrls","defaultError","loading","compact","maxItems","format","version","title","description","image","items","RssParser","DC_NAMESPACE","ISO_DATE_PATTERN","getChildElement","parent","namespace","method","getText","textContent","addItemExtensions","item","source","enclosures","apply","getElementsByTagName","category","url","enclosure","domain","content","getDate","str","millis","Date","parse","isNaN","String","replace","now","xml","implementation","createDocument","DOMParser","parseFromString","ActiveXObject","async","loadXML","getDocument","root","rss","link","date","parseAtom","channel","imageUrl","width","height","trim","RegExp","parseScriptingNews","getAttributeNS","getElementsByTagNameNS","rights","textInput","input","parseRss","100","101","102","103","200","201","202","203","204","205","206","207","208","226","300","301","302","303","304","305","307","308","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","421","422","423","424","425","426","428","429","431","451","500","501","502","503","504","505","506","507","508","509","510","511","ObjectStore","defaultState","_update","newState","state","fetchFeed","headers","Headers","Accept","join","fetch","encodeURIComponent","referrerPolicy","res","status","statusCodes","json","message","assign","console","formatDate","month","getMonth","toString","padStart","day","hours","getHours","minutes","getMinutes","getFullYear","ConfigStore","align","boxFillColor","fontFace","frameColor","headless","linkColor","radius","showXmlButton","textColor","titleBarColor","titleBarTextColor","FeedStore","bind","hosts","reduce","accu","startsWith","host","split","hits","total","metadata","feedUrls","percentage","sort","load","endsWith","kb","bytes","toFixed","fulfill","Image","onload","maxWidth","Math","min","factor","src","onMount","staticId","dynamicId","staticCss","dynamicCss","id","rel","href","head","config","color","rule","$config","itemTitleClass","defaults","native","iframe","body","retrieved","contentWindow","getNativeObject","prototype","search","scripts","querySelectorAll","script","query","parts","call","pair","getNativeValue","decodeURIComponent","parseQuery","container","Box","location","JSON","stringify"],"mappings":"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"}