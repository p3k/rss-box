{"version":3,"file":"box.js","sources":["../node_modules/domready/ready.js","../node_modules/svelte/internal/index.mjs","../node_modules/svelte/store/index.mjs","../src/local.js","../src/urls.js","../src/error.js","../src/rss-parser.js","../src/status-codes.js","../src/stores.js","../src/components/LinkIcon.html","../src/components/RssIcon.html","../src/components/PaperclipIcon.html","../src/components/Box.html","../src/box.js","../src/native.js"],"sourcesContent":["/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  if (typeof module != 'undefined') module.exports = definition()\n  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n  else this[name] = definition()\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\n\n  if (!loaded)\n  doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener)\n    loaded = 1\n    while (listener = fns.shift()) listener()\n  })\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn)\n  }\n\n});\n","function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    var _a;\n    const append_styles_to = get_root_for_styles(target);\n    if (!((_a = append_styles_to) === null || _a === void 0 ? void 0 : _a.getElementById(style_sheet_id))) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_node(node) {\n    if (!node)\n        return document;\n    return (node.getRootNode ? node.getRootNode() : node.ownerDocument); // check for getRootNode because IE is still supported\n}\nfunction get_root_for_styles(node) {\n    const root = get_root_for_node(node);\n    return root.host ? root : root;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_styles(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => svg ? svg_element(name) : element(name));\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_node(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : context || []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : options.context || []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.40.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_node, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","const mode = \"__BUILD_MODE__\";\n\nexport const urls = {};\n\n// Note: better not to use ES6 features here\n\nif (mode === \"prod\") {\n  urls.app = \"https://p3k.org/rss\";\n  urls.proxy = \"https://p3k.org/json/roxy\";\n  urls.referrers = \"https://p3k.org/json/ferris?group=rss-box\";\n  urls.feed = \"https://blog.p3k.org/stories.xml\";\n} else {\n  // urls.feed = urls.app + '/test/sampleRssAtom.xml';\n  // urls.feed = 'http://www.artsjournal.com/artsjournal1/music.xml';\n}\n","import { urls as localUrls } from \"./local\";\n\nexport const baseUrl = \"http://localhost\";\n\nexport const urls = {\n  app: baseUrl + \":8000\",\n  proxy: baseUrl + \":8000/roxy\",\n  referrers: baseUrl + \":8000/ferris?group=rss-box\",\n  feed: \"https://blog.p3k.org/stories.xml\"\n};\n\nObject.keys(localUrls).forEach(key => {\n  if (key in urls) urls[key] = localUrls[key];\n});\n","import { urls } from \"./urls\";\n\nconst defaultError = {\n  loading: false,\n  compact: false,\n  maxItems: 3,\n  format: \"Error\",\n  version: \"⚡\",\n  title: \"RSS Box Error\",\n  description:\n    \"This output was automatically generated to report an error that occurred during a request to the RSS Box Viewer.\",\n  image: \"\",\n  items: [\n    {\n      title: \"Oops, something went wrong…\",\n      description: \"An error occurred while processing the request to the RSS Box Viewer.\"\n    },\n    {\n      title: \"The following error message was returned:\",\n      description: \"Unknown error\"\n    },\n    { title: \"\" }\n  ]\n};\n\nexport default function(url, message) {\n  const error = Object.assign({}, defaultError);\n  error.link = urls.app + \"?url=\" + url;\n  error.items[1].description = message;\n  error.items[2].description = `\n    Most likely, this might have happened because of a non-existent or invalid RSS feed URL.\n    <a href=\"https://validator.w3.org/feed/check.cgi?url=${url}\">Please check</a> and\n    possibly correct your input, then try again.\n  `;\n  return error;\n}\n","function RssParser() {\n  const DC_NAMESPACE = \"http://purl.org/dc/elements/1.1/\";\n  const RDF_NAMESPACE = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\n  const ISO_DATE_PATTERN = /([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9:]+).*$/;\n\n  const getDocument = function(xml) {\n    if (!xml) return;\n\n    let doc;\n\n    if (document.implementation.createDocument) {\n      const parser = new DOMParser();\n      doc = parser.parseFromString(xml, \"application/xml\");\n    } else if (window.ActiveXObject) {\n      doc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      doc.async = \"false\";\n      doc.loadXML(xml);\n    }\n\n    return doc;\n  };\n\n  const getChildElement = function(name, parent, namespace) {\n    if (!name || !parent) return null;\n    let method = \"getElementsByTagName\";\n    if (namespace) method += \"NS\";\n    return parent[method](name, namespace)[0];\n  };\n\n  const getText = function(node) {\n    if (!node) return \"\";\n    if (node.length) node = node[0];\n    return node.textContent;\n  };\n\n  const error = Error(\"Malformed RSS syntax\");\n\n  const parseRss = function(root, type) {\n    const rss = { items: [] };\n    const channel = getChildElement(\"channel\", root);\n\n    if (!channel) throw error;\n\n    rss.format = \"RSS\";\n    rss.version = type === \"rdf:RDF\" ? \"1.0\" : root.getAttribute(\"version\");\n    rss.title = getText(getChildElement(\"title\", channel));\n    rss.description = getText(getChildElement(\"description\", channel));\n    rss.link = getText(getChildElement(\"link\", channel));\n\n    const image = getChildElement(\"image\", channel);\n\n    rss.image = image\n      ? {\n        source: getText(getChildElement(\"url\", image)) || image.getAttributeNS(RDF_NAMESPACE, \"resource\"),\n        title: getText(getChildElement(\"title\", image)),\n        link: getText(getChildElement(\"link\", image)),\n        width: getText(getChildElement(\"width\", image)),\n        height: getText(getChildElement(\"height\", image)),\n        description: getText(getChildElement(\"description\", image))\n      }\n      : \"\";\n\n    if (type === \"rdf:RDF\") {\n      const date = channel.getElementsByTagNameNS(DC_NAMESPACE, \"date\");\n      rss.date = getDate(getText(date));\n      rss.rights = getText(channel.getElementsByTagNameNS(DC_NAMESPACE, \"creator\"));\n\n      const textInput = getChildElement(\"textinput\", root);\n\n      rss.input = textInput\n        ? {\n          link: getText(getChildElement(\"link\", textInput)),\n          description: getText(getChildElement(\"description\", textInput)),\n          name: getText(getChildElement(\"name\", textInput)),\n          title: getText(getChildElement(\"title\", textInput))\n        }\n        : \"\";\n    } else {\n      rss.date = getDate(\n        getText(getChildElement(\"lastBuildDate\", channel)) || getText(getChildElement(\"pubDate\", channel))\n      );\n      rss.rights = getText(getChildElement(\"copyright\", channel));\n    }\n\n    // Create a native Array from HTMLCollection\n    const items = Array.apply(null, root.getElementsByTagName(\"item\"));\n\n    items.forEach(node => {\n      const item = {\n        title: getText(getChildElement(\"title\", node)),\n        description: getText(getChildElement(\"description\", node)),\n        link: getText(getChildElement(\"link\", node)) || getText(getChildElement(\"guid\", node))\n      };\n\n      if (!item.description) {\n        let content = getText(getChildElement(\"encoded\", node, \"content\"));\n        if (content) {\n          item.description = content;\n        } else {\n          content = getText(getChildElement(\"encoded\", node));\n          if (content) {\n            item.description = content;\n          }\n        }\n      }\n\n      addItemExtensions(node, item);\n      rss.items.push(item);\n    });\n\n    return rss;\n  };\n\n  const parseAtom = function(root) {\n    const rss = { items: [] };\n\n    rss.format = \"Atom\";\n    rss.version = \"1.0\";\n    rss.title = getText(getChildElement(\"title\", root));\n    rss.description = getText(getChildElement(\"subtitle\", root));\n    rss.image = \"\";\n\n    const link = getChildElement(\"link:not([self])\", root);\n    if (link) rss.link = link.getAttribute(\"href\");\n\n    rss.date = getDate(getChildElement(\"updated\", root));\n\n    const entries = Array.apply(null, root.getElementsByTagName(\"entry\"));\n\n    entries.forEach(node => {\n      const item = {\n        title: getText(getChildElement(\"title\", node)),\n        description: getText(getChildElement(\"summary\", node))\n      };\n\n      const link = getChildElement(\"link\", node);\n      if (link) item.link = link.getAttribute(\"href\");\n\n      rss.items.push(item);\n    });\n\n    return rss;\n  };\n\n  const parseScriptingNews = function(root) {\n    const rss = { items: [] };\n    const channel = getChildElement(\"header\", root);\n\n    if (!channel) throw error;\n\n    rss.format = \"Scripting News\";\n    rss.version = getText(getChildElement(\"scriptingNewsVersion\", channel));\n    rss.title = getText(getChildElement(\"channelTitle\", channel));\n    rss.description = getText(getChildElement(\"channelDescription\", channel));\n    rss.link = getText(getChildElement(\"channelLink\", channel));\n\n    rss.date = getDate(\n      getText(getChildElement(\"lastBuildDate\", channel)) || getText(getChildElement(\"pubDate\", channel))\n    );\n\n    const imageUrl = getChildElement(\"imageUrl\", channel);\n\n    if (imageUrl) {\n      rss.image = {\n        source: getText(imageUrl),\n        title: getText(getChildElement(\"imageTitle\", channel)),\n        link: getText(getChildElement(\"imageLink\", channel)),\n        width: getText(getChildElement(\"imageWidth\", channel)),\n        height: getText(getChildElement(\"imageHeight\", channel)),\n        description: getText(getChildElement(\"imageCaption\", channel))\n      };\n    }\n\n    const items = Array.apply(null, root.getElementsByTagName(\"item\"));\n\n    items.forEach(node => {\n      const item = { title: \"\" };\n\n      item.description = getText(getChildElement(\"text\", node)).replace(/\\n/g, \" \");\n\n      const link = getChildElement(\"link\", node);\n\n      if (link) {\n        const text = getText(getChildElement(\"linetext\", link))\n          .replace(/\\n/g, \" \")\n          .trim();\n        if (text) {\n          item.description = item.description.replace(\n            new RegExp(text),\n            \"<a href=\\\"\" + getText(getChildElement(\"url\", node)) + \"\\\">\" + text + \"</a>\"\n          );\n        }\n        item.link = getText(getChildElement(\"url\", link));\n      }\n\n      addItemExtensions(node, item);\n      rss.items.push(item);\n    });\n\n    return rss;\n  };\n\n  const addItemExtensions = function(node, item) {\n    const source = getChildElement(\"source\", node);\n    // Create a native Array from HTMLCollection\n    const enclosures = Array.apply(null, node.getElementsByTagName(\"enclosure\"));\n    const category = getChildElement(\"category\", node);\n\n    if (source) {\n      item.source = {\n        url: source.getAttribute(\"url\"),\n        title: source.textContent\n      };\n    }\n\n    item.enclosures = enclosures.map(enclosure => {\n      return {\n        url: enclosure.getAttribute(\"url\"),\n        length: enclosure.getAttribute(\"length\"),\n        type: enclosure.getAttribute(\"type\")\n      };\n    });\n\n    if (category) {\n      item.category = {\n        domain: category.getAttribute(\"domain\") || \"\",\n        content: category.textContent\n      };\n    }\n\n    return item;\n  };\n\n  const getDate = function(str) {\n    let millis = Date.parse(str);\n\n    if (isNaN(millis)) {\n      millis = Date.parse(String(str).replace(ISO_DATE_PATTERN, \"$1/$2/$3 $4\"));\n      if (isNaN(millis)) millis = Date.now();\n    }\n\n    return new Date(millis);\n  };\n\n  return {\n    parse: function(xml) {\n      const doc = getDocument(xml);\n\n      if (!doc || getChildElement(\"parsererror\", doc.documentElement)) throw error;\n\n      const root = doc.documentElement;\n      const type = root.nodeName;\n\n      switch (type) {\n      case \"feed\":\n        return parseAtom(root);\n\n      case \"scriptingNews\":\n        return parseScriptingNews(root);\n\n      default:\n        return parseRss(root, type);\n      }\n    }\n  };\n}\n\nexport { RssParser };\n","export default {\n  \"100\": \"Continue\",\n  \"101\": \"Switching Protocols\",\n  \"102\": \"Processing\",\n  \"103\": \"Early Hints\",\n  \"200\": \"OK\",\n  \"201\": \"Created\",\n  \"202\": \"Accepted\",\n  \"203\": \"Non-Authoritative Information\",\n  \"204\": \"No Content\",\n  \"205\": \"Reset Content\",\n  \"206\": \"Partial Content\",\n  \"207\": \"Multi-Status\",\n  \"208\": \"Already Reported\",\n  \"226\": \"IM Used\",\n  \"300\": \"Multiple Choices\",\n  \"301\": \"Moved Permanently\",\n  \"302\": \"Found\",\n  \"303\": \"See Other\",\n  \"304\": \"Not Modified\",\n  \"305\": \"Use Proxy\",\n  \"307\": \"Temporary Redirect\",\n  \"308\": \"Permanent Redirect\",\n  \"400\": \"Bad Request\",\n  \"401\": \"Unauthorized\",\n  \"402\": \"Payment Required\",\n  \"403\": \"Forbidden\",\n  \"404\": \"Not Found\",\n  \"405\": \"Method Not Allowed\",\n  \"406\": \"Not Acceptable\",\n  \"407\": \"Proxy Authentication Required\",\n  \"408\": \"Request Timeout\",\n  \"409\": \"Conflict\",\n  \"410\": \"Gone\",\n  \"411\": \"Length Required\",\n  \"412\": \"Precondition Failed\",\n  \"413\": \"Payload Too Large\",\n  \"414\": \"URI Too Long\",\n  \"415\": \"Unsupported Media Type\",\n  \"416\": \"Range Not Satisfiable\",\n  \"417\": \"Expectation Failed\",\n  \"418\": \"I'm a Teapot\",\n  \"421\": \"Misdirected Request\",\n  \"422\": \"Unprocessable Entity\",\n  \"423\": \"Locked\",\n  \"424\": \"Failed Dependency\",\n  \"425\": \"Too Early\",\n  \"426\": \"Upgrade Required\",\n  \"428\": \"Precondition Required\",\n  \"429\": \"Too Many Requests\",\n  \"431\": \"Request Header Fields Too Large\",\n  \"451\": \"Unavailable For Legal Reasons\",\n  \"500\": \"Internal Server Error\",\n  \"501\": \"Not Implemented\",\n  \"502\": \"Bad Gateway\",\n  \"503\": \"Service Unavailable\",\n  \"504\": \"Gateway Timeout\",\n  \"505\": \"HTTP Version Not Supported\",\n  \"506\": \"Variant Also Negotiates\",\n  \"507\": \"Insufficient Storage\",\n  \"508\": \"Loop Detected\",\n  \"509\": \"Bandwidth Limit Exceeded\",\n  \"510\": \"Not Extended\",\n  \"511\": \"Network Authentication Required\"\n};\n","import { readable, writable } from \"svelte/store\";\n\nimport error from \"./error\";\nimport { RssParser } from \"./rss-parser\";\nimport { urls } from \"./urls\";\nimport { description, version } from \"../package.json\";\nimport statusCodes from \"./status-codes\";\n\nconst ObjectStore = defaultState => {\n  const { subscribe, update } = writable(defaultState);\n\n  const _update = newState =>\n    update(state => {\n      Object.keys(newState).forEach(key => {\n        if (key in state === false) return;\n        state[key] = newState[key];\n        // See https://svelte.dev/tutorial/updating-arrays-and-objects\n        state = state; // eslint-disable-line no-self-assign\n      });\n\n      return state;\n    });\n\n  return {\n    subscribe,\n    update: _update,\n    set: _update\n  };\n};\n\nfunction fetchFeed(url) {\n  if (!url) return;\n\n  const store = this;\n\n  store.set({ loading: true });\n\n  const headers = new Headers({\n    Accept: [\n      \"application/rss+xml\",\n      \"application/rdf+xml\",\n      \"application/atom+xml\",\n      \"application/xml;q=0.9\",\n      \"text/xml;q=0.8\"\n    ].join()\n  });\n\n  fetch(urls.proxy + \"?url=\" + encodeURIComponent(url), { headers, referrerPolicy: \"no-referrer\" })\n    .then(res => {\n      if (res.status > 399) throw Error(statusCodes[res.status]);\n      return res.json();\n    })\n    .then(data => {\n      const parser = RssParser();\n      const rss = parser.parse(data.content);\n\n      if (!rss.date) rss.date = new Date(data.headers.date);\n\n      store.set({ ...rss, loading: false });\n    })\n    .catch(message => {\n      store.set(error(url, message));\n      console.error(message);\n    });\n}\n\nfunction fetchReferrers() {\n  const store = this;\n\n  fetch(urls.referrers)\n    .then(res => res.json())\n    .then(data => {\n      const hosts = data.reduce((accu, item) => {\n        if (\n          item.url.startsWith(\"http\") &&\n          !item.url.startsWith(urls.app) &&\n          item.url.indexOf(\"atari-embeds.googleusercontent.com\") < 0\n        ) {\n          const url = item.url.replace(/^([^.]*)www\\./, \"$1\");\n          const host = url.split(\"/\")[2];\n          let data = accu[host];\n\n          if (!data) {\n            data = { host, url, hits: item.hits, total: 0 };\n            accu[host] = data;\n            accu.push(data);\n          } else if (item.hits > data.hits) {\n            data.url = item.url;\n            data.hits = item.hits;\n          }\n\n          data.total += item.hits;\n          data.metadata = item.metadata || { feedUrls: [] };\n        }\n        return accu;\n      }, []);\n\n      const total = hosts.reduce((accu, item) => accu += item.total, 0);\n\n      const referrers = hosts.map(item => {\n        item.percentage = (item.total / total) * 100;\n        return item;\n      });\n\n      referrers.sort((a, b) => b.percentage - a.percentage);\n      store.set(referrers);\n    });\n}\n\nexport const formatDate = date => {\n  if (!date) return;\n\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n\n  const day = date\n    .getDate()\n    .toString()\n    .padStart(2, \"0\");\n\n  const hours = date\n    .getHours()\n    .toString()\n    .padStart(2, \"0\");\n\n  const minutes = date\n    .getMinutes()\n    .toString()\n    .padStart(2, \"0\");\n\n  return `${date.getFullYear()}-${month}-${day}, ${hours}:${minutes}h`;\n};\n\nexport const ConfigStore = () => {\n  const store = ObjectStore({\n    align: \"initial\",\n    boxFillColor: \"#ffead2\",\n    compact: false,\n    fontFace: \"10pt sans-serif\",\n    frameColor: \"#b3a28e\",\n    headless: false,\n    height: \"\",\n    linkColor: \"#2c7395\",\n    maxItems: 7,\n    radius: 5,\n    showXmlButton: true,\n    textColor: \"#95412b\",\n    titleBarColor: \"#90a8b3\",\n    titleBarTextColor: \"#ffead2\",\n    url: \"\",\n    width: \"\"\n  });\n\n  return store;\n};\n\nexport const FeedStore = () => {\n  const store = ObjectStore({\n    date: new Date(),\n    description: \"\",\n    format: \"\",\n    image: \"\",\n    input: \"\",\n    items: [],\n    link: \"\",\n    loading: false,\n    title: \"\",\n    version: \"\"\n  });\n\n  store.fetch = fetchFeed.bind(store);\n  store.formatDate = formatDate.bind(store);\n  return store;\n};\n\nexport const app = readable({ description, version });\nexport const config = ConfigStore();\nexport const feed = FeedStore();\nexport const referrers = writable([]);\n\nreferrers.fetch = fetchReferrers.bind(referrers);\n\n// For debugging\n//window.stores = { app, config, feed, referrers };\n","<style>\n  svg {\n    width: 1.2em;\n    height: 1.2em;\n  }\n\n  polygon {\n    fill: currentColor;\n    fill-rule: evenodd;\n    clip-rule: evenodd;\n  }\n</style>\n\n<!-- Source: https://commons.wikimedia.org/wiki/File:VisualEditor_-_Icon_-_External-link.svg -->\n<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 12 12' preserveAspectRatio='xMinYMin'>\n  <g>\n    <polygon points='2,2 5,2 5,3 3,3 3,9 9,9 9,7 10,7 10,10 2,10'/>\n    <polygon points='6.211,2 10,2 10,5.789 8.579,4.368 6.447,6.5 5.5,5.553 7.632,3.421'/>\n  </g>\n</svg>\n","<style>\n  svg {\n    width: 1em;\n    height: 1em;\n  }\n\n  path {\n    fill: currentColor;\n  }\n</style>\n\n<!-- Source: https://commons.wikimedia.org/wiki/File:Rss_font_awesome.svg -->\n<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 -256 1792 1792' preserveAspectRatio='xMinYMin'>\n  <g transform='matrix(1,0,0,-1,212.61017,1346.1695)'>\n    <path d='M 384,192 Q 384,112 328,56 272,0 192,0 112,0 56,56 0,112 0,192 q 0,80 56,136 56,56 136,56 80,0 136,-56 56,-56 56,-136 z M 896,69 Q 898,41 879,21 861,0 832,0 H 697 Q 672,0 654,16.5 636,33 634,58 612,287 449.5,449.5 287,612 58,634 33,636 16.5,654 0,672 0,697 v 135 q 0,29 21,47 17,17 43,17 h 5 Q 229,883 375,815.5 521,748 634,634 748,521 815.5,375 883,229 896,69 z m 512,-2 Q 1410,40 1390,20 1372,0 1344,0 H 1201 Q 1175,0 1156.5,17.5 1138,35 1137,60 1125,275 1036,468.5 947,662 804.5,804.5 662,947 468.5,1036 275,1125 60,1138 35,1139 17.5,1157.5 0,1176 0,1201 v 143 q 0,28 20,46 18,18 44,18 h 3 Q 329,1395 568.5,1288 808,1181 994,994 1181,808 1288,568.5 1395,329 1408,67 z'/>\n  </g>\n</svg>\n","<style>\n  svg {\n    width: 1.2em;\n    height: 1.2em;\n  }\n\n  path {\n    fill: currentColor;\n  }\n</style>\n\n<!-- Source: https://commons.wikimedia.org/wiki/File:Antu_application-rtf.svg -->\n<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' preserveAspectRatio='xMinYMin'>\n  <path d='m409 531l-5.244 6.733c-.983 1.262-.708 3.511.55 4.497 1.259.986 3.5.71 4.484-.552l5.244-6.733.655-.842c.656-.842.472-2.341-.367-2.998-.839-.658-2.334-.473-2.989.368l-.656.842-3.933 5.05-.656.842c-.328.421-.236 1.17.183 1.499.42.329 1.167.237 1.495-.184l4.589-5.891.839.658-4.589 5.891c-.656.842-2.15 1.026-2.989.368-.839-.658-1.023-2.157-.367-2.998l.656-.842 4.589-5.891c.983-1.262 3.225-1.538 4.484-.552 1.259.986 1.534 3.235.551 4.497l-.656.842-5.244 6.733c-1.311 1.683-4.3 2.051-5.978.736-1.678-1.315-2.045-4.313-.734-5.997l5.244-6.733.839.658' transform='matrix(.84782 0 0 .84521-338.85-445.68)' stroke='none'/>\n</svg>\n","<script>\n  import { onMount } from \"svelte\";\n  import { urls } from \"../urls\";\n\n  import LinkIcon from \"./LinkIcon.html\";\n  import RssIcon from \"./RssIcon.html\";\n  import PaperclipIcon from \"./PaperclipIcon.html\";\n\n  // Stores coming in via props\n  export let feed;\n  export let config;\n\n  onMount(() => {\n    const staticId = \"rssbox-static-stylesheet\";\n    const dynamicId = \"rssbox-dynamic-stylesheet\";\n\n    let staticCss = window[staticId];\n    let dynamicCss = window[dynamicId];\n\n    if (!staticCss) {\n      staticCss = document.createElement(\"link\");\n      staticCss.id = staticId;\n      staticCss.rel = \"stylesheet\";\n      staticCss.href = urls.app + \"/box.css\";\n      document.head.appendChild(staticCss);\n    }\n\n    if (!dynamicCss) {\n      dynamicCss = document.createElement(\"style\");\n      dynamicCss.id = dynamicId;\n      document.head.appendChild(dynamicCss);\n    }\n\n    config.subscribe(state => {\n      const color = state.linkColor;\n\n      if (!color) return;\n\n      let rule =\n        `.rssbox[data-link-color=\"${ color }\"] a {\n          color: ${ color };\n        }`;\n\n      if (dynamicCss.innerHTML.indexOf(rule) < 0) dynamicCss.innerHTML += rule;\n    });\n  });\n\n  function kb(bytes) {\n    return (bytes / 1000).toFixed(2) + \"\\u200akB\";\n  }\n\n  function load(data) {\n    return new Promise(fulfill => {\n      const image = new Image();\n\n      image.onload = () => {\n        const maxWidth = Math.min(100, image.width);\n        const factor = image.width > maxWidth ? maxWidth / image.width : 1;\n\n        fulfill({\n          width: (image.width * factor) + \"px\",\n          height: (image.height * factor) + \"px\"\n        });\n      };\n\n      image.src = data.source;\n    });\n  }\n\n  $: height = $config.height && $config.height > -1 ? $config.height + \"px\" : \"100%\";\n  $: width = $config.width ? $config.width + \"px\" : \"100%\";\n  $: itemTitleClass = !$config.compact ? \"bold\" : \"\";\n</script>\n\n<style>\n  .rssbox {\n    box-sizing: border-box;\n    width: 100%;\n    border: 1px solid #000;\n    font-family: sans-serif;\n    overflow: hidden;\n    border-radius: 0;\n    -moz-border-radius: 0;\n  }\n\n  .rssbox-icon {\n    float: right;\n    width: 1em;\n    margin-left: 0.5em;\n  }\n\n  .rssbox-titlebar {\n    padding: 0.5em;\n    color: #000;\n    background-color: #add8e6;\n    border-bottom: 1px solid #000;\n    font-weight: bold;\n    letter-spacing: 0.01em;\n  }\n\n  .rssbox-date {\n    margin-top: 0.2em;\n    font-size: 0.8em;\n    font-weight: normal;\n  }\n\n  .rssbox-content {\n    height: auto;\n    padding: 0.5em;\n    overflow-x: hidden;\n    overflow-y: auto;\n    background-color: #fff;\n    clear: both;\n    -ms-overflow-style: -ms-autohiding-scrollbar;\n  }\n\n  .rssbox-content aside {\n    clear: both;\n    float: right;\n  }\n\n  .rssbox-content aside a {\n    display: block;\n    margin-left: 0.5em;\n  }\n\n  .rssbox-image {\n    float: right;\n    margin: 0 0 0.5em 0.5em;\n    background-position: left center;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  .rssbox-item-title.bold {\n    font-weight: bold;\n  }\n\n  .rssbox-enclosure, .rssbox-source {\n    display: block;\n    width: 1em;\n  }\n\n  .rssbox-form {\n    margin-bottom: 0.8em;\n  }\n\n  .rssbox-form input {\n    padding: 0.5em;\n    background-color: #fff;\n  }\n\n  .rssbox-promo {\n    text-align: right;\n    font-size: 0.7em;\n    letter-spacing: 0.01em;\n  }\n</style>\n\n<div data-link-color='{ $config.linkColor }' class='rssbox rssBox' style='max-width: { width }; border-color: { $config.frameColor }; border-radius: { $config.radius }px; font: { $config.fontFace }; float: { $config.align };'>\n  { #if !$config.headless }\n    <div class='rssbox-titlebar' style='color: { $config.titleBarTextColor }; background-color: { $config.titleBarColor }; border-bottom-color: { $config.frameColor };'>\n      { #if $config.showXmlButton }\n        <div class='rssbox-icon'>\n          <a href='{ $config.url }' title='{ $feed.format } { $feed.version }' style='color: { $config.titleBarTextColor }'>\n            <RssIcon/>\n          </a>\n        </div>\n      { /if }\n      <div>\n        <a href='{ $feed.link }' style='color: { $config.titleBarTextColor };'>\n          { $feed.title }\n        </a>\n      </div>\n      <div class='rssbox-date'>\n        { feed.formatDate($feed.date) }\n      </div>\n    </div>\n  { /if }\n\n  <div class='rssbox-content rssBoxContent' style='background-color: { $config.boxFillColor }; height: { height };'>\n    { #if $feed.image && !$config.compact }\n      { #await load($feed.image) then image }\n        <a href='{ $feed.image.link }' title='{ $feed.image.title }'>\n          <div alt='{ $feed.image.description }' class='rssbox-image' style='background-image: url({ $feed.image.source }); width: { image.width }; height: { image.height };'></div>\n        </a>\n      { /await }\n    { /if }\n\n    { #each $feed.items as item, index }\n      { #if index < $config.maxItems }\n        <div class='rssbox-item-content rssBoxItemContent' style='color: { $config.textColor }'>\n          { #if item.title }\n            <div class='rssbox-item-title { itemTitleClass }'>\n              { #if item.link }\n                <a href='{ item.link }'>\n                  {@html item.title }\n                </a>\n              { :else }\n                {@html item.title }\n              { /if }\n            </div>\n          { /if }\n\n          { #if !$config.compact }\n            <aside>\n              { #if item.source }\n                <a href='{ item.source.url }' title='{ item.source.title }' class='rssbox-source'>\n                  { #if item.source.url.endsWith(\".xml\") }\n                    <RssIcon/>\n                  { :else }\n                    <LinkIcon/>\n                  { /if }\n                </a>\n              { /if }\n\n              { #if item.enclosures }\n                { #each item.enclosures as enclosure }\n                  <a href='{ enclosure.url }' title='{ kb(enclosure.length) } { enclosure.type }' class='rssbox-enclosure'>\n                    <PaperclipIcon/>\n                  </a>\n                { /each }\n              { /if }\n            </aside>\n            {@html item.description }\n          { /if }\n        </div>\n      { /if }\n    { /each }\n\n    { #if $feed.input }\n      <form class='rssbox-form' method='get' action='{ $feed.input.link }'>\n        <input type='text' name='{ $feed.input.name }' placeholder='Enter search &amp; hit return…' data-placeholder='{ $feed.input.description }'>\n      </form>\n    { /if }\n    <div class='rssbox-promo rssBoxPromo'>\n      <a href='{ urls.app }' style='color: { $config.textColor }'>RSS Box by p3k.org</a>\n    </div>\n  </div>\n</div>\n","import ready from \"domready\";\n\nimport { ConfigStore, FeedStore } from \"./stores\";\nimport { urls } from \"./urls\";\nimport getNativeObject from \"./native.js\";\n\nimport Box from \"./components/Box.html\";\n\n// These are backwards-compatible settings\nconst defaults = {\n  align: \"initial\",\n  boxFillColor: \"#fff\",\n  compact: false,\n  fontFace: \"inherit\",\n  frameColor: \"#000\",\n  headless: false,\n  height: \"\",\n  linkColor: \"\",\n  maxItems: 7,\n  radius: 0,\n  showXmlButton: false,\n  textColor: \"#000\",\n  titleBarColor: \"#add8e6\",\n  titleBarTextColor: \"#000\",\n  width: \"200\"\n};\n\nconst keys = [...Object.keys(defaults), \"url\"];\n\nready(() => {\n  const reduce = getNativeObject(\"Array\").prototype.reduce;\n\n  const getNativeValue = value => {\n    if (value === \"true\") return true;\n    if (value === \"false\") return false;\n    return value;\n  };\n\n  const parseQuery = query => {\n    const parts = query.split(\"&\");\n    return reduce.call(\n      parts,\n      (data, pair) => {\n        const [key, value] = pair.split(\"=\");\n        if (keys.indexOf(key) > -1) {\n          data[key] = getNativeValue(decodeURIComponent(value));\n        }\n        return data;\n      },\n      {}\n    );\n  };\n\n  // Earlier versions used protocol-less URLs like `//p3k.org/rss`\n  const search = urls.app.replace(/^https?:/, \"\");\n  const scripts = Array.apply(null, document.querySelectorAll(\"script[src*=\\\"\" + search + \"\\\"]\"));\n  const feedUrls = [];\n\n  scripts.forEach(script => {\n    const query = script.src.split(\"?\")[1];\n\n    if (!query) return;\n\n    let data = parseQuery(query);\n\n    if (!data.url) data.url = urls.feed;\n\n    data = Object.assign({}, defaults, data);\n\n    // Create new stores for each box to prevent multiple boxes getting the same data\n    const feed = FeedStore();\n    const config = ConfigStore();\n\n    config.set(data);\n    feed.fetch(data.url, feed);\n\n    const parent = script.parentNode;\n    const container = document.createElement(\"div\");\n\n    parent.insertBefore(container, script);\n\n    void new Box({\n      target: container,\n      props: { feed, config }\n    });\n\n    // Only for IE11\n    script.parentNode.removeChild(script);\n\n    if (data.url !== urls.feed && feedUrls.indexOf(data.url) < 0) {\n      feedUrls.push(data.url);\n    }\n  });\n\n  if (location.href.indexOf(urls.app) < 0) {\n    const metadata = JSON.stringify({ feedUrls });\n    fetch(urls.referrers + \"&url=\" + encodeURIComponent(location.href) + \"&metadata=\" + encodeURIComponent(metadata));\n  }\n});\n","// Retrieve native objects without any extensions (e.g. by PrototypeJS)\nexport default function getNativeObject(native) {\n  var iframe = document.createElement(\"iframe\");\n  document.body.appendChild(iframe);\n  var retrieved = iframe.contentWindow[native];\n  document.body.removeChild(iframe);\n  return retrieved;\n}\n"],"names":["listener","fns","doc","hack","domContentLoaded","loaded","document","documentElement","doScroll","test","readyState","addEventListener","removeEventListener","shift","fn","setTimeout","push","noop","run","blank_object","Object","create","run_all","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","const","unsub","callbacks","unsubscribe","append","target","node","appendChild","append_styles","style_sheet_id","styles","_a","root","append_styles_to","getRootNode","ownerDocument","get_root_for_node","host","getElementById","style","element","id","textContent","head","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","let","i","length","d","name","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","setProperty","current_component","HtmlTag","this","e","n","set_current_component","component","get_current_component","Error","c","html","h","m","nodeName","t","innerHTML","Array","from","childNodes","p","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","ctx","after_update","outros","outroing","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","type","index","resolved","child_ctx","undefined","slice","current","needs_flush","blocks","mount","then","error","catch","hasCatch","pending","create_component","mount_component","customElement","new_on_destroy","on_mount","map","filter","on_destroy","destroy_component","make_dirty","fill","init","options","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","rest","hydrate","nodes","children","l","intro","SvelteComponent","$destroy","$on","indexOf","splice","$set","$$props","obj","$$set","keys","subscriber_queue","writable","start","stop","subscribers","set","new_value","run_queue","s","invalidate","subscriber","urls","baseUrl","app","proxy","referrers","feed","localUrls","defaultError","loading","compact","maxItems","format","version","title","description","image","items","RssParser","DC_NAMESPACE","ISO_DATE_PATTERN","getChildElement","parent","namespace","method","getText","addItemExtensions","item","source","enclosures","apply","getElementsByTagName","category","url","enclosure","domain","content","getDate","str","millis","Date","parse","isNaN","String","replace","now","xml","implementation","createDocument","DOMParser","parseFromString","window","ActiveXObject","async","loadXML","getDocument","rss","link","date","parseAtom","channel","imageUrl","width","height","trim","RegExp","parseScriptingNews","getAttributeNS","getElementsByTagNameNS","rights","textInput","input","parseRss","100","101","102","103","200","201","202","203","204","205","206","207","208","226","300","301","302","303","304","305","307","308","400","401","402","403","404","405","406","407","408","409","410","411","412","413","414","415","416","417","418","421","422","423","424","425","426","428","429","431","451","500","501","502","503","504","505","506","507","508","509","510","511","ObjectStore","defaultState","_update","newState","state","fetchFeed","headers","Headers","Accept","join","fetch","encodeURIComponent","referrerPolicy","res","status","statusCodes","json","message","assign","console","formatDate","month","getMonth","toString","padStart","day","hours","getHours","minutes","getMinutes","getFullYear","ConfigStore","align","boxFillColor","fontFace","frameColor","headless","linkColor","radius","showXmlButton","textColor","titleBarColor","titleBarTextColor","FeedStore","bind","hosts","reduce","accu","startsWith","split","hits","total","metadata","feedUrls","percentage","sort","load","endsWith","kb","bytes","toFixed","fulfill","Image","onload","maxWidth","Math","min","factor","src","staticId","dynamicId","staticCss","dynamicCss","rel","href","config","color","rule","$config","itemTitleClass","defaults","native","iframe","body","retrieved","contentWindow","getNativeObject","prototype","search","scripts","querySelectorAll","script","query","parts","call","pair","getNativeValue","decodeURIComponent","parseQuery","container","Box","location","JSON","stringify"],"mappings":"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"}