{"version":3,"file":"box.js","sources":["../node_modules/domready/ready.js","../node_modules/svelte/src/runtime/internal/utils.js","../node_modules/svelte/src/runtime/internal/dom.js","../node_modules/svelte/src/runtime/internal/lifecycle.js","../node_modules/svelte/src/runtime/internal/scheduler.js","../node_modules/svelte/src/runtime/internal/transitions.js","../node_modules/svelte/src/runtime/internal/await_block.js","../node_modules/svelte/src/runtime/internal/each.js","../node_modules/svelte/src/runtime/internal/Component.js","../node_modules/svelte/src/shared/boolean_attributes.js","../node_modules/svelte/src/runtime/store/index.js","../src/local.js","../src/urls.js","../src/error.js","../src/rss-parser.js","../src/status-codes.js","../src/stores.js","../src/lib/LinkIcon.svelte","../node_modules/svelte/src/runtime/internal/disclose-version/index.js","../node_modules/svelte/src/shared/version.js","../src/lib/RssIcon.svelte","../src/lib/PaperclipIcon.svelte","../src/Box.svelte","../src/box.js","../src/native.js"],"sourcesContent":["/*!\n  * domready (c) Dustin Diaz 2014 - License MIT\n  */\n!function (name, definition) {\n\n  if (typeof module != 'undefined') module.exports = definition()\n  else if (typeof define == 'function' && typeof define.amd == 'object') define(definition)\n  else this[name] = definition()\n\n}('domready', function () {\n\n  var fns = [], listener\n    , doc = document\n    , hack = doc.documentElement.doScroll\n    , domContentLoaded = 'DOMContentLoaded'\n    , loaded = (hack ? /^loaded|^c/ : /^loaded|^i|^c/).test(doc.readyState)\n\n\n  if (!loaded)\n  doc.addEventListener(domContentLoaded, listener = function () {\n    doc.removeEventListener(domContentLoaded, listener)\n    loaded = 1\n    while (listener = fns.shift()) listener()\n  })\n\n  return function (fn) {\n    loaded ? setTimeout(fn, 0) : fns.push(fn)\n  }\n\n});\n","/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\nimport { contenteditable_truthy_values, has_prop } from './utils.js';\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst myChildren = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmyChildren.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = myChildren;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seqLen =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seqLen] + 1;\n\t\tconst newLen = seqLen + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[newLen] = i;\n\t\tlongest = Math.max(newLen, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst toMove = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\ttoMove.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\ttoMove.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\ttoMove.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < toMove.length; i++) {\n\t\twhile (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(toMove[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tif (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} processNode\n * @param {() => R} createNode\n * @param {boolean} dontUpdateLastIndex\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst resultNode = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = processNode(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dontUpdateLastIndex) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = processNode(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dontUpdateLastIndex) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn createNode();\n\t})();\n\tresultNode.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn resultNode;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst dataStr = '' + data;\n\t\t\tif (node.data.startsWith(dataStr)) {\n\t\t\t\tif (node.data.length !== dataStr.length) {\n\t\t\t\t\treturn node.splitText(dataStr.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = dataStr;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import { is_promise } from './utils.js';\nimport { check_outros, group_outros, transition_in, transition_out } from './transitions.js';\nimport { flush } from './scheduler.js';\nimport { get_current_component, set_current_component } from './lifecycle.js';\n\n/**\n * @template T\n * @param {Promise<T>} promise\n * @param {import('./private.js').PromiseInfo<T>} info\n * @returns {boolean}\n */\nexport function handle_promise(promise, info) {\n\tconst token = (info.token = {});\n\t/**\n\t * @param {import('./private.js').FragmentFactory} type\n\t * @param {0 | 1 | 2} index\n\t * @param {number} [key]\n\t * @param {any} [value]\n\t * @returns {void}\n\t */\n\tfunction update(type, index, key, value) {\n\t\tif (info.token !== token) return;\n\t\tinfo.resolved = value;\n\t\tlet child_ctx = info.ctx;\n\t\tif (key !== undefined) {\n\t\t\tchild_ctx = child_ctx.slice();\n\t\t\tchild_ctx[key] = value;\n\t\t}\n\t\tconst block = type && (info.current = type)(child_ctx);\n\t\tlet needs_flush = false;\n\t\tif (info.block) {\n\t\t\tif (info.blocks) {\n\t\t\t\tinfo.blocks.forEach((block, i) => {\n\t\t\t\t\tif (i !== index && block) {\n\t\t\t\t\t\tgroup_outros();\n\t\t\t\t\t\ttransition_out(block, 1, 1, () => {\n\t\t\t\t\t\t\tif (info.blocks[i] === block) {\n\t\t\t\t\t\t\t\tinfo.blocks[i] = null;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcheck_outros();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tinfo.block.d(1);\n\t\t\t}\n\t\t\tblock.c();\n\t\t\ttransition_in(block, 1);\n\t\t\tblock.m(info.mount(), info.anchor);\n\t\t\tneeds_flush = true;\n\t\t}\n\t\tinfo.block = block;\n\t\tif (info.blocks) info.blocks[index] = block;\n\t\tif (needs_flush) {\n\t\t\tflush();\n\t\t}\n\t}\n\tif (is_promise(promise)) {\n\t\tconst current_component = get_current_component();\n\t\tpromise.then(\n\t\t\t(value) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.then, 1, info.value, value);\n\t\t\t\tset_current_component(null);\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tset_current_component(current_component);\n\t\t\t\tupdate(info.catch, 2, info.error, error);\n\t\t\t\tset_current_component(null);\n\t\t\t\tif (!info.hasCatch) {\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\t// if we previously had a then/catch block, destroy it\n\t\tif (info.current !== info.pending) {\n\t\t\tupdate(info.pending, 0);\n\t\t\treturn true;\n\t\t}\n\t} else {\n\t\tif (info.current !== info.then) {\n\t\t\tupdate(info.then, 1, info.value, promise);\n\t\t\treturn true;\n\t\t}\n\t\tinfo.resolved = /** @type {T} */ (promise);\n\t}\n}\n\n/** @returns {void} */\nexport function update_await_block_branch(info, ctx, dirty) {\n\tconst child_ctx = ctx.slice();\n\tconst { resolved } = info;\n\tif (info.current === info.then) {\n\t\tchild_ctx[info.value] = resolved;\n\t}\n\tif (info.current === info.catch) {\n\t\tchild_ctx[info.error] = resolved;\n\t}\n\tinfo.block.p(child_ctx, dirty);\n}\n","import { transition_in, transition_out } from './transitions.js';\nimport { run_all } from './utils.js';\n\n// general each functions:\n\nexport function ensure_array_like(array_like_or_iterator) {\n\treturn array_like_or_iterator?.length !== undefined\n\t\t? array_like_or_iterator\n\t\t: Array.from(array_like_or_iterator);\n}\n\n// keyed each functions:\n\n/** @returns {void} */\nexport function destroy_block(block, lookup) {\n\tblock.d(1);\n\tlookup.delete(block.key);\n}\n\n/** @returns {void} */\nexport function outro_and_destroy_block(block, lookup) {\n\ttransition_out(block, 1, 1, () => {\n\t\tlookup.delete(block.key);\n\t});\n}\n\n/** @returns {void} */\nexport function fix_and_destroy_block(block, lookup) {\n\tblock.f();\n\tdestroy_block(block, lookup);\n}\n\n/** @returns {void} */\nexport function fix_and_outro_and_destroy_block(block, lookup) {\n\tblock.f();\n\toutro_and_destroy_block(block, lookup);\n}\n\n/** @returns {any[]} */\nexport function update_keyed_each(\n\told_blocks,\n\tdirty,\n\tget_key,\n\tdynamic,\n\tctx,\n\tlist,\n\tlookup,\n\tnode,\n\tdestroy,\n\tcreate_each_block,\n\tnext,\n\tget_context\n) {\n\tlet o = old_blocks.length;\n\tlet n = list.length;\n\tlet i = o;\n\tconst old_indexes = {};\n\twhile (i--) old_indexes[old_blocks[i].key] = i;\n\tconst new_blocks = [];\n\tconst new_lookup = new Map();\n\tconst deltas = new Map();\n\tconst updates = [];\n\ti = n;\n\twhile (i--) {\n\t\tconst child_ctx = get_context(ctx, list, i);\n\t\tconst key = get_key(child_ctx);\n\t\tlet block = lookup.get(key);\n\t\tif (!block) {\n\t\t\tblock = create_each_block(key, child_ctx);\n\t\t\tblock.c();\n\t\t} else if (dynamic) {\n\t\t\t// defer updates until all the DOM shuffling is done\n\t\t\tupdates.push(() => block.p(child_ctx, dirty));\n\t\t}\n\t\tnew_lookup.set(key, (new_blocks[i] = block));\n\t\tif (key in old_indexes) deltas.set(key, Math.abs(i - old_indexes[key]));\n\t}\n\tconst will_move = new Set();\n\tconst did_move = new Set();\n\t/** @returns {void} */\n\tfunction insert(block) {\n\t\ttransition_in(block, 1);\n\t\tblock.m(node, next);\n\t\tlookup.set(block.key, block);\n\t\tnext = block.first;\n\t\tn--;\n\t}\n\twhile (o && n) {\n\t\tconst new_block = new_blocks[n - 1];\n\t\tconst old_block = old_blocks[o - 1];\n\t\tconst new_key = new_block.key;\n\t\tconst old_key = old_block.key;\n\t\tif (new_block === old_block) {\n\t\t\t// do nothing\n\t\t\tnext = new_block.first;\n\t\t\to--;\n\t\t\tn--;\n\t\t} else if (!new_lookup.has(old_key)) {\n\t\t\t// remove old block\n\t\t\tdestroy(old_block, lookup);\n\t\t\to--;\n\t\t} else if (!lookup.has(new_key) || will_move.has(new_key)) {\n\t\t\tinsert(new_block);\n\t\t} else if (did_move.has(old_key)) {\n\t\t\to--;\n\t\t} else if (deltas.get(new_key) > deltas.get(old_key)) {\n\t\t\tdid_move.add(new_key);\n\t\t\tinsert(new_block);\n\t\t} else {\n\t\t\twill_move.add(old_key);\n\t\t\to--;\n\t\t}\n\t}\n\twhile (o--) {\n\t\tconst old_block = old_blocks[o];\n\t\tif (!new_lookup.has(old_block.key)) destroy(old_block, lookup);\n\t}\n\twhile (n) insert(new_blocks[n - 1]);\n\trun_all(updates);\n\treturn new_blocks;\n}\n\n/** @returns {void} */\nexport function validate_each_keys(ctx, list, get_context, get_key) {\n\tconst keys = new Map();\n\tfor (let i = 0; i < list.length; i++) {\n\t\tconst key = get_key(get_context(ctx, list, i));\n\t\tif (keys.has(key)) {\n\t\t\tlet value = '';\n\t\t\ttry {\n\t\t\t\tvalue = `with value '${String(key)}' `;\n\t\t\t} catch (e) {\n\t\t\t\t// can't stringify\n\t\t\t}\n\t\t\tthrow new Error(\n\t\t\t\t`Cannot have duplicate keys in a keyed each: Keys at index ${keys.get(\n\t\t\t\t\tkey\n\t\t\t\t)} and ${i} ${value}are duplicates`\n\t\t\t);\n\t\t}\n\t\tkeys.set(key, i);\n\t}\n}\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n/** @returns {void} */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\tconst nodes = children(options.target);\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","const _boolean_attributes = /** @type {const} */ ([\n\t'allowfullscreen',\n\t'allowpaymentrequest',\n\t'async',\n\t'autofocus',\n\t'autoplay',\n\t'checked',\n\t'controls',\n\t'default',\n\t'defer',\n\t'disabled',\n\t'formnovalidate',\n\t'hidden',\n\t'inert',\n\t'ismap',\n\t'loop',\n\t'multiple',\n\t'muted',\n\t'nomodule',\n\t'novalidate',\n\t'open',\n\t'playsinline',\n\t'readonly',\n\t'required',\n\t'reversed',\n\t'selected'\n]);\n\n/**\n * List of HTML boolean attributes (e.g. `<input disabled>`).\n * Source: https://html.spec.whatwg.org/multipage/indices.html\n *\n * @type {Set<string>}\n */\nexport const boolean_attributes = new Set([..._boolean_attributes]);\n\n/** @typedef {typeof _boolean_attributes[number]} BooleanAttributes */\n","import {\n\trun_all,\n\tsubscribe,\n\tnoop,\n\tsafe_not_equal,\n\tis_function,\n\tget_store_value\n} from '../internal/index.js';\n\nconst subscriber_queue = [];\n\n/**\n * Creates a `Readable` store that allows reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#readable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readable(value, start) {\n\treturn {\n\t\tsubscribe: writable(value, start).subscribe\n\t};\n}\n\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n *\n * https://svelte.dev/docs/svelte-store#writable\n * @template T\n * @param {T} [value] initial value\n * @param {import('./public.js').StartStopNotifier<T>} [start]\n * @returns {import('./public.js').Writable<T>}\n */\nexport function writable(value, start = noop) {\n\t/** @type {import('./public.js').Unsubscriber} */\n\tlet stop;\n\t/** @type {Set<import('./private.js').SubscribeInvalidateTuple<T>>} */\n\tconst subscribers = new Set();\n\t/** @param {T} new_value\n\t * @returns {void}\n\t */\n\tfunction set(new_value) {\n\t\tif (safe_not_equal(value, new_value)) {\n\t\t\tvalue = new_value;\n\t\t\tif (stop) {\n\t\t\t\t// store is ready\n\t\t\t\tconst run_queue = !subscriber_queue.length;\n\t\t\t\tfor (const subscriber of subscribers) {\n\t\t\t\t\tsubscriber[1]();\n\t\t\t\t\tsubscriber_queue.push(subscriber, value);\n\t\t\t\t}\n\t\t\t\tif (run_queue) {\n\t\t\t\t\tfor (let i = 0; i < subscriber_queue.length; i += 2) {\n\t\t\t\t\t\tsubscriber_queue[i][0](subscriber_queue[i + 1]);\n\t\t\t\t\t}\n\t\t\t\t\tsubscriber_queue.length = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @param {import('./public.js').Updater<T>} fn\n\t * @returns {void}\n\t */\n\tfunction update(fn) {\n\t\tset(fn(value));\n\t}\n\n\t/**\n\t * @param {import('./public.js').Subscriber<T>} run\n\t * @param {import('./private.js').Invalidator<T>} [invalidate]\n\t * @returns {import('./public.js').Unsubscriber}\n\t */\n\tfunction subscribe(run, invalidate = noop) {\n\t\t/** @type {import('./private.js').SubscribeInvalidateTuple<T>} */\n\t\tconst subscriber = [run, invalidate];\n\t\tsubscribers.add(subscriber);\n\t\tif (subscribers.size === 1) {\n\t\t\tstop = start(set, update) || noop;\n\t\t}\n\t\trun(value);\n\t\treturn () => {\n\t\t\tsubscribers.delete(subscriber);\n\t\t\tif (subscribers.size === 0 && stop) {\n\t\t\t\tstop();\n\t\t\t\tstop = null;\n\t\t\t}\n\t\t};\n\t}\n\treturn { set, update, subscribe };\n}\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>, set: (value: T) => void, update: (fn: import('./public.js').Updater<T>) => void) => import('./public.js').Unsubscriber | void} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * Derived value store by synchronizing one or more readable stores and\n * applying an aggregation function over its input values.\n *\n * https://svelte.dev/docs/svelte-store#derived\n * @template {import('./private.js').Stores} S\n * @template T\n * @overload\n * @param {S} stores - input stores\n * @param {(values: import('./private.js').StoresValues<S>) => T} fn - function callback that aggregates the values\n * @param {T} [initial_value] - initial value\n * @returns {import('./public.js').Readable<T>}\n */\n\n/**\n * @template {import('./private.js').Stores} S\n * @template T\n * @param {S} stores\n * @param {Function} fn\n * @param {T} [initial_value]\n * @returns {import('./public.js').Readable<T>}\n */\nexport function derived(stores, fn, initial_value) {\n\tconst single = !Array.isArray(stores);\n\t/** @type {Array<import('./public.js').Readable<any>>} */\n\tconst stores_array = single ? [stores] : stores;\n\tif (!stores_array.every(Boolean)) {\n\t\tthrow new Error('derived() expects stores as input, got a falsy value');\n\t}\n\tconst auto = fn.length < 2;\n\treturn readable(initial_value, (set, update) => {\n\t\tlet started = false;\n\t\tconst values = [];\n\t\tlet pending = 0;\n\t\tlet cleanup = noop;\n\t\tconst sync = () => {\n\t\t\tif (pending) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tcleanup();\n\t\t\tconst result = fn(single ? values[0] : values, set, update);\n\t\t\tif (auto) {\n\t\t\t\tset(result);\n\t\t\t} else {\n\t\t\t\tcleanup = is_function(result) ? result : noop;\n\t\t\t}\n\t\t};\n\t\tconst unsubscribers = stores_array.map((store, i) =>\n\t\t\tsubscribe(\n\t\t\t\tstore,\n\t\t\t\t(value) => {\n\t\t\t\t\tvalues[i] = value;\n\t\t\t\t\tpending &= ~(1 << i);\n\t\t\t\t\tif (started) {\n\t\t\t\t\t\tsync();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t() => {\n\t\t\t\t\tpending |= 1 << i;\n\t\t\t\t}\n\t\t\t)\n\t\t);\n\t\tstarted = true;\n\t\tsync();\n\t\treturn function stop() {\n\t\t\trun_all(unsubscribers);\n\t\t\tcleanup();\n\t\t\t// We need to set this to false because callbacks can still happen despite having unsubscribed:\n\t\t\t// Callbacks might already be placed in the queue which doesn't know it should no longer\n\t\t\t// invoke this derived store.\n\t\t\tstarted = false;\n\t\t};\n\t});\n}\n\n/**\n * Takes a store and returns a new one derived from the old one that is readable.\n *\n * https://svelte.dev/docs/svelte-store#readonly\n * @template T\n * @param {import('./public.js').Readable<T>} store  - store to make readonly\n * @returns {import('./public.js').Readable<T>}\n */\nexport function readonly(store) {\n\treturn {\n\t\tsubscribe: store.subscribe.bind(store)\n\t};\n}\n\nexport { get_store_value as get };\n","const mode = \"__BUILD_MODE__\";\n\nexport const urls = {};\n\n// Note: better to not use ES6 features here\n\nif (mode === \"prod\") {\n  urls.app = \"https://p3k.org/rss\";\n  urls.proxy = \"https://p3k.org/json/roxy\";\n  urls.referrers = \"https://p3k.org/json/ferris?group=rss-box\";\n  urls.feed = \"https://blog.p3k.org/stories.xml\";\n\n  //urls.app = \"http://localhost:8000\";\n  //urls.proxy = \"http://localhost:8000/roxy\";\n} else {\n  //urls.feed = `${urls.app}/test/sampleRssAtom.xml`;\n  //urls.feed = 'http://www.artsjournal.com/artsjournal1/music.xml';\n}\n","import { urls as localUrls } from \"./local\";\n\nexport const baseUrl = \"http://localhost\";\n\nexport const urls = {\n  app: `${baseUrl}:8000`,\n  proxy: `${baseUrl}:8000/roxy`,\n  referrers: `${baseUrl}:8000/ferris?group=rss-box`,\n  feed: \"https://blog.p3k.org/stories.xml\"\n};\n\nObject.keys(localUrls).forEach(key => {\n  if (key in urls) urls[key] = localUrls[key];\n});\n","import { urls } from \"./urls\";\n\nconst defaultError = {\n  loading: false,\n  compact: false,\n  maxItems: 3,\n  format: \"Error\",\n  version: \"⚡\",\n  title: \"RSS Box Error\",\n  description:\n    \"This output was automatically generated to report an error that occurred during a request to the RSS Box Viewer.\",\n  image: \"\",\n  items: [\n    {\n      title: \"Oops, something went wrong…\",\n      description:\n        \"An error occurred while processing the request to the RSS Box Viewer.\"\n    },\n    {\n      title: \"The following error message was returned:\",\n      description: \"Unknown error\"\n    },\n    { title: \"\" }\n  ]\n};\n\nexport default function (url, message) {\n  const error = Object.assign({}, defaultError);\n  error.link = `${urls.app}?url=${url}`;\n  error.items[1].description = message;\n  error.items[2].description = `\n    Most likely, this might have happened because of a non-existent or invalid RSS feed URL.\n    <a href=\"https://validator.w3.org/feed/check.cgi?url=${url}\">Please check</a> and\n    possibly correct your input, then try again.\n  `;\n  return error;\n}\n","function RssParser() {\n  const DC_NAMESPACE = \"http://purl.org/dc/elements/1.1/\";\n  const RDF_NAMESPACE = \"http://www.w3.org/1999/02/22-rdf-syntax-ns#\";\n  const ISO_DATE_PATTERN = /([0-9]{4})-([0-9]{2})-([0-9]{2})T([0-9:]+).*$/;\n\n  const getDocument = function (xml) {\n    if (!xml) return;\n\n    let doc;\n\n    if (document.implementation.createDocument) {\n      const parser = new DOMParser();\n      doc = parser.parseFromString(xml, \"application/xml\");\n    } else if (window.ActiveXObject) {\n      doc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      doc.async = \"false\";\n      doc.loadXML(xml);\n    }\n\n    return doc;\n  };\n\n  const getChildElement = function (name, parent, namespace) {\n    if (!name || !parent) return null;\n    let method = \"getElementsByTagName\";\n    if (namespace) method += \"NS\";\n    return parent[method](name, namespace)[0];\n  };\n\n  const getText = function (node) {\n    if (!node) return \"\";\n    if (node.length) node = node[0];\n    return node.textContent;\n  };\n\n  const error = Error(\"Malformed RSS syntax\");\n\n  const parseRss = function (root, type) {\n    const rss = { items: [] };\n    const channel = getChildElement(\"channel\", root);\n\n    if (!channel) throw error;\n\n    rss.format = \"RSS\";\n    rss.version = type === \"rdf:RDF\" ? \"1.0\" : root.getAttribute(\"version\");\n    rss.title = getText(getChildElement(\"title\", channel));\n    rss.description = getText(getChildElement(\"description\", channel));\n    rss.link = getText(getChildElement(\"link\", channel));\n\n    const image = getChildElement(\"image\", channel);\n\n    rss.image = image\n      ? {\n          source:\n            getText(getChildElement(\"url\", image)) ||\n            image.getAttributeNS(RDF_NAMESPACE, \"resource\"),\n          title: getText(getChildElement(\"title\", image)),\n          link: getText(getChildElement(\"link\", image)),\n          width: getText(getChildElement(\"width\", image)),\n          height: getText(getChildElement(\"height\", image)),\n          description: getText(getChildElement(\"description\", image))\n        }\n      : \"\";\n\n    if (type === \"rdf:RDF\") {\n      const date = channel.getElementsByTagNameNS(DC_NAMESPACE, \"date\");\n      rss.date = getDate(getText(date));\n      rss.rights = getText(\n        channel.getElementsByTagNameNS(DC_NAMESPACE, \"creator\")\n      );\n\n      const textInput = getChildElement(\"textinput\", root);\n\n      rss.input = textInput\n        ? {\n            link: getText(getChildElement(\"link\", textInput)),\n            description: getText(getChildElement(\"description\", textInput)),\n            name: getText(getChildElement(\"name\", textInput)),\n            title: getText(getChildElement(\"title\", textInput))\n          }\n        : \"\";\n    } else {\n      rss.date = getDate(\n        getText(getChildElement(\"lastBuildDate\", channel)) ||\n          getText(getChildElement(\"pubDate\", channel))\n      );\n      rss.rights = getText(getChildElement(\"copyright\", channel));\n    }\n\n    // Create a native Array from HTMLCollection\n    const items = Array.apply(null, root.getElementsByTagName(\"item\"));\n\n    items.forEach(node => {\n      const item = {\n        title: getText(getChildElement(\"title\", node)),\n        description: getText(getChildElement(\"description\", node)),\n        link:\n          getText(getChildElement(\"link\", node)) ||\n          getText(getChildElement(\"guid\", node))\n      };\n\n      if (!item.description) {\n        let content = getText(getChildElement(\"encoded\", node, \"content\"));\n        if (content) {\n          item.description = content;\n        } else {\n          content = getText(getChildElement(\"encoded\", node));\n          if (content) {\n            item.description = content;\n          }\n        }\n      }\n\n      addItemExtensions(node, item);\n      rss.items.push(item);\n    });\n\n    return rss;\n  };\n\n  const parseAtom = function (root) {\n    const rss = { items: [] };\n\n    rss.format = \"Atom\";\n    rss.version = \"1.0\";\n    rss.title = getText(getChildElement(\"title\", root));\n    rss.description = getText(getChildElement(\"subtitle\", root));\n    rss.image = \"\";\n\n    const link = getChildElement(\"link:not([self])\", root);\n    if (link) rss.link = link.getAttribute(\"href\");\n\n    rss.date = getDate(getChildElement(\"updated\", root));\n\n    const entries = Array.apply(null, root.getElementsByTagName(\"entry\"));\n\n    entries.forEach(node => {\n      const item = {\n        title: getText(getChildElement(\"title\", node)),\n        description: getText(getChildElement(\"summary\", node))\n      };\n\n      const link = getChildElement(\"link\", node);\n      if (link) item.link = link.getAttribute(\"href\");\n\n      rss.items.push(item);\n    });\n\n    return rss;\n  };\n\n  const parseScriptingNews = function (root) {\n    const rss = { items: [] };\n    const channel = getChildElement(\"header\", root);\n\n    if (!channel) throw error;\n\n    rss.format = \"Scripting News\";\n    rss.version = getText(getChildElement(\"scriptingNewsVersion\", channel));\n    rss.title = getText(getChildElement(\"channelTitle\", channel));\n    rss.description = getText(getChildElement(\"channelDescription\", channel));\n    rss.link = getText(getChildElement(\"channelLink\", channel));\n\n    rss.date = getDate(\n      getText(getChildElement(\"lastBuildDate\", channel)) ||\n        getText(getChildElement(\"pubDate\", channel))\n    );\n\n    const imageUrl = getChildElement(\"imageUrl\", channel);\n\n    if (imageUrl) {\n      rss.image = {\n        source: getText(imageUrl),\n        title: getText(getChildElement(\"imageTitle\", channel)),\n        link: getText(getChildElement(\"imageLink\", channel)),\n        width: getText(getChildElement(\"imageWidth\", channel)),\n        height: getText(getChildElement(\"imageHeight\", channel)),\n        description: getText(getChildElement(\"imageCaption\", channel))\n      };\n    }\n\n    const items = Array.apply(null, root.getElementsByTagName(\"item\"));\n\n    items.forEach(node => {\n      const item = { title: \"\" };\n\n      item.description = getText(getChildElement(\"text\", node)).replace(\n        /\\n/g,\n        \" \"\n      );\n\n      const link = getChildElement(\"link\", node);\n\n      if (link) {\n        const text = getText(getChildElement(\"linetext\", link))\n          .replace(/\\n/g, \" \")\n          .trim();\n        if (text) {\n          item.description = item.description.replace(\n            new RegExp(text),\n            '<a href=\"' +\n              getText(getChildElement(\"url\", node)) +\n              '\">' +\n              text +\n              \"</a>\"\n          );\n        }\n        item.link = getText(getChildElement(\"url\", link));\n      }\n\n      addItemExtensions(node, item);\n      rss.items.push(item);\n    });\n\n    return rss;\n  };\n\n  const addItemExtensions = function (node, item) {\n    const source = getChildElement(\"source\", node);\n    // Create a native Array from HTMLCollection\n    const enclosures = Array.apply(\n      null,\n      node.getElementsByTagName(\"enclosure\")\n    );\n    const category = getChildElement(\"category\", node);\n\n    if (source) {\n      item.source = {\n        url: source.getAttribute(\"url\"),\n        title: source.textContent\n      };\n    }\n\n    item.enclosures = enclosures.map(enclosure => {\n      return {\n        url: enclosure.getAttribute(\"url\"),\n        length: enclosure.getAttribute(\"length\"),\n        type: enclosure.getAttribute(\"type\")\n      };\n    });\n\n    if (category) {\n      item.category = {\n        domain: category.getAttribute(\"domain\") || \"\",\n        content: category.textContent\n      };\n    }\n\n    return item;\n  };\n\n  const getDate = function (str) {\n    let millis = Date.parse(str);\n\n    if (isNaN(millis)) {\n      millis = Date.parse(String(str).replace(ISO_DATE_PATTERN, \"$1/$2/$3 $4\"));\n      if (isNaN(millis)) millis = Date.now();\n    }\n\n    return new Date(millis);\n  };\n\n  return {\n    parse: function (xml) {\n      const doc = getDocument(xml);\n\n      if (!doc || getChildElement(\"parsererror\", doc.documentElement))\n        throw error;\n\n      const root = doc.documentElement;\n      const type = root.nodeName;\n\n      switch (type) {\n        case \"feed\":\n          return parseAtom(root);\n\n        case \"scriptingNews\":\n          return parseScriptingNews(root);\n\n        default:\n          return parseRss(root, type);\n      }\n    }\n  };\n}\n\nexport { RssParser };\n","export default {\n  100: \"Continue\",\n  101: \"Switching Protocols\",\n  102: \"Processing\",\n  103: \"Early Hints\",\n  200: \"OK\",\n  201: \"Created\",\n  202: \"Accepted\",\n  203: \"Non-Authoritative Information\",\n  204: \"No Content\",\n  205: \"Reset Content\",\n  206: \"Partial Content\",\n  207: \"Multi-Status\",\n  208: \"Already Reported\",\n  226: \"IM Used\",\n  300: \"Multiple Choices\",\n  301: \"Moved Permanently\",\n  302: \"Found\",\n  303: \"See Other\",\n  304: \"Not Modified\",\n  305: \"Use Proxy\",\n  307: \"Temporary Redirect\",\n  308: \"Permanent Redirect\",\n  400: \"Bad Request\",\n  401: \"Unauthorized\",\n  402: \"Payment Required\",\n  403: \"Forbidden\",\n  404: \"Not Found\",\n  405: \"Method Not Allowed\",\n  406: \"Not Acceptable\",\n  407: \"Proxy Authentication Required\",\n  408: \"Request Timeout\",\n  409: \"Conflict\",\n  410: \"Gone\",\n  411: \"Length Required\",\n  412: \"Precondition Failed\",\n  413: \"Payload Too Large\",\n  414: \"URI Too Long\",\n  415: \"Unsupported Media Type\",\n  416: \"Range Not Satisfiable\",\n  417: \"Expectation Failed\",\n  418: \"I'm a Teapot\",\n  421: \"Misdirected Request\",\n  422: \"Unprocessable Entity\",\n  423: \"Locked\",\n  424: \"Failed Dependency\",\n  425: \"Too Early\",\n  426: \"Upgrade Required\",\n  428: \"Precondition Required\",\n  429: \"Too Many Requests\",\n  431: \"Request Header Fields Too Large\",\n  451: \"Unavailable For Legal Reasons\",\n  500: \"Internal Server Error\",\n  501: \"Not Implemented\",\n  502: \"Bad Gateway\",\n  503: \"Service Unavailable\",\n  504: \"Gateway Timeout\",\n  505: \"HTTP Version Not Supported\",\n  506: \"Variant Also Negotiates\",\n  507: \"Insufficient Storage\",\n  508: \"Loop Detected\",\n  509: \"Bandwidth Limit Exceeded\",\n  510: \"Not Extended\",\n  511: \"Network Authentication Required\"\n};\n","import { readable, writable } from \"svelte/store\";\n\nimport error from \"./error\";\nimport { RssParser } from \"./rss-parser\";\nimport { urls } from \"./urls\";\nimport { description, version } from \"../package.json\";\nimport statusCodes from \"./status-codes\";\n\nconst ObjectStore = defaultState => {\n  const { subscribe, update } = writable(defaultState);\n\n  const _update = newState =>\n    update(state => {\n      Object.keys(newState).forEach(key => {\n        if (key in state === false) return;\n        state[key] = newState[key];\n        // See https://svelte.dev/tutorial/updating-arrays-and-objects\n        state = state; // eslint-disable-line no-self-assign\n      });\n\n      return state;\n    });\n\n  return {\n    subscribe,\n    update: _update,\n    set: _update\n  };\n};\n\nfunction fetchFeed(url) {\n  if (!url) return;\n\n  const store = this;\n\n  store.set({ loading: true });\n\n  const headers = new Headers({\n    Accept: [\n      \"application/rss+xml\",\n      \"application/rdf+xml\",\n      \"application/atom+xml\",\n      \"application/xml;q=0.9\",\n      \"text/xml;q=0.8\"\n    ].join()\n  });\n\n  fetch(`${urls.proxy}?url=${encodeURIComponent(url)}`, {\n    headers,\n    referrerPolicy: \"no-referrer\"\n  })\n    .then(res => {\n      if (res.status > 399) throw Error(statusCodes[res.status]);\n      return res.json();\n    })\n    .then(data => {\n      const parser = RssParser();\n      const rss = parser.parse(data.content);\n\n      if (!rss.date) rss.date = new Date(data.headers.date);\n\n      store.set({ ...rss, loading: false });\n    })\n    .catch(message => {\n      store.set(error(url, message));\n      console.error(message);\n    });\n}\n\nfunction fetchReferrers() {\n  const store = this;\n\n  fetch(urls.referrers)\n    .then(res => res.json())\n    .then(data => {\n      const hosts = data.reduce((accu, item) => {\n        if (\n          item.url.startsWith(\"http\") &&\n          !item.url.startsWith(urls.app) &&\n          item.url.indexOf(\"atari-embeds.googleusercontent.com\") < 0\n        ) {\n          const url = item.url.replace(/^([^.]*)www\\./, \"$1\");\n          const host = url.split(\"/\")[2];\n          let data = accu[host];\n\n          if (!data) {\n            data = { host, url, hits: item.hits, total: 0 };\n            accu[host] = data;\n            accu.push(data);\n          } else if (item.hits > data.hits) {\n            data.url = item.url;\n            data.hits = item.hits;\n          }\n\n          data.total += item.hits;\n          data.metadata = item.metadata || { feedUrls: [] };\n        }\n        return accu;\n      }, []);\n\n      const total = hosts.reduce((accu, item) => (accu += item.total), 0);\n\n      const referrers = hosts.map(item => {\n        item.percentage = (item.total / total) * 100;\n        return item;\n      });\n\n      referrers.sort((a, b) => b.percentage - a.percentage);\n      store.set(referrers);\n    });\n}\n\nexport const formatDate = date => {\n  if (!date) return;\n\n  const month = (date.getMonth() + 1).toString().padStart(2, \"0\");\n\n  const day = date.getDate().toString().padStart(2, \"0\");\n\n  const hours = date.getHours().toString().padStart(2, \"0\");\n\n  const minutes = date.getMinutes().toString().padStart(2, \"0\");\n\n  return `${date.getFullYear()}-${month}-${day}, ${hours}:${minutes}h`;\n};\n\nexport const ConfigStore = () => {\n  const store = ObjectStore({\n    align: \"initial\",\n    boxFillColor: \"#ffead2\",\n    compact: false,\n    fontFace: \"10pt sans-serif\",\n    frameColor: \"#b3a28e\",\n    headless: false,\n    height: \"\",\n    linkColor: \"#2c7395\",\n    maxItems: 7,\n    radius: 5,\n    showXmlButton: true,\n    textColor: \"#95412b\",\n    titleBarColor: \"#90a8b3\",\n    titleBarTextColor: \"#ffead2\",\n    url: \"\",\n    width: \"\"\n  });\n\n  return store;\n};\n\nexport const FeedStore = () => {\n  const store = ObjectStore({\n    date: new Date(),\n    description: \"\",\n    format: \"\",\n    image: \"\",\n    input: \"\",\n    items: [],\n    link: \"\",\n    loading: false,\n    title: \"\",\n    version: \"\"\n  });\n\n  store.fetch = fetchFeed.bind(store);\n  store.formatDate = formatDate.bind(store);\n  return store;\n};\n\nexport const app = readable({ description, version });\nexport const config = ConfigStore();\nexport const feed = FeedStore();\nexport const referrers = writable([]);\n\nreferrers.fetch = fetchReferrers.bind(referrers);\n\n// For debugging\n//window.stores = { app, config, feed, referrers };\n","<!-- Source: https://commons.wikimedia.org/wiki/File:VisualEditor_-_Icon_-_External-link.svg -->\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 12 12\"\n  preserveAspectRatio=\"xMinYMin\"\n>\n  <g>\n    <polygon points=\"2,2 5,2 5,3 3,3 3,9 9,9 9,7 10,7 10,10 2,10\" />\n    <polygon\n      points=\"6.211,2 10,2 10,5.789 8.579,4.368 6.447,6.5 5.5,5.553 7.632,3.421\"\n    />\n  </g>\n</svg>\n\n<style>\n  svg {\n    width: 1.2em;\n    height: 1.2em;\n  }\n\n  polygon {\n    fill: currentcolor;\n    fill-rule: evenodd;\n    clip-rule: evenodd;\n  }\n</style>\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.1.1';\nexport const PUBLIC_VERSION = '4';\n","<!-- Source: https://commons.wikimedia.org/wiki/File:Rss_font_awesome.svg -->\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 -256 1792 1792\"\n  preserveAspectRatio=\"xMinYMin\"\n>\n  <g transform=\"matrix(1,0,0,-1,212.61017,1346.1695)\">\n    <path\n      d=\"M 384,192 Q 384,112 328,56 272,0 192,0 112,0 56,56 0,112 0,192 q 0,80 56,136 56,56 136,56 80,0 136,-56 56,-56 56,-136 z M 896,69 Q 898,41 879,21 861,0 832,0 H 697 Q 672,0 654,16.5 636,33 634,58 612,287 449.5,449.5 287,612 58,634 33,636 16.5,654 0,672 0,697 v 135 q 0,29 21,47 17,17 43,17 h 5 Q 229,883 375,815.5 521,748 634,634 748,521 815.5,375 883,229 896,69 z m 512,-2 Q 1410,40 1390,20 1372,0 1344,0 H 1201 Q 1175,0 1156.5,17.5 1138,35 1137,60 1125,275 1036,468.5 947,662 804.5,804.5 662,947 468.5,1036 275,1125 60,1138 35,1139 17.5,1157.5 0,1176 0,1201 v 143 q 0,28 20,46 18,18 44,18 h 3 Q 329,1395 568.5,1288 808,1181 994,994 1181,808 1288,568.5 1395,329 1408,67 z\"\n    />\n  </g>\n</svg>\n\n<style>\n  svg {\n    width: 1em;\n    height: 1em;\n  }\n\n  path {\n    fill: currentcolor;\n  }\n</style>\n","<!-- Source: https://commons.wikimedia.org/wiki/File:Antu_application-rtf.svg -->\n<svg\n  xmlns=\"http://www.w3.org/2000/svg\"\n  viewBox=\"0 0 16 16\"\n  preserveAspectRatio=\"xMinYMin\"\n>\n  <path\n    d=\"m409 531l-5.244 6.733c-.983 1.262-.708 3.511.55 4.497 1.259.986 3.5.71 4.484-.552l5.244-6.733.655-.842c.656-.842.472-2.341-.367-2.998-.839-.658-2.334-.473-2.989.368l-.656.842-3.933 5.05-.656.842c-.328.421-.236 1.17.183 1.499.42.329 1.167.237 1.495-.184l4.589-5.891.839.658-4.589 5.891c-.656.842-2.15 1.026-2.989.368-.839-.658-1.023-2.157-.367-2.998l.656-.842 4.589-5.891c.983-1.262 3.225-1.538 4.484-.552 1.259.986 1.534 3.235.551 4.497l-.656.842-5.244 6.733c-1.311 1.683-4.3 2.051-5.978.736-1.678-1.315-2.045-4.313-.734-5.997l5.244-6.733.839.658\"\n    transform=\"matrix(.84782 0 0 .84521-338.85-445.68)\"\n    stroke=\"none\"\n  />\n</svg>\n\n<style>\n  svg {\n    width: 1.2em;\n    height: 1.2em;\n  }\n\n  path {\n    fill: currentcolor;\n  }\n</style>\n","<script>\n  import { onMount } from \"svelte\";\n  import { urls } from \"./urls\";\n\n  import LinkIcon from \"./lib/LinkIcon.svelte\";\n  import RssIcon from \"./lib/RssIcon.svelte\";\n  import PaperclipIcon from \"./lib/PaperclipIcon.svelte\";\n\n  // Stores coming in via props\n  export let feed;\n  export let config;\n\n  onMount(() => {\n    const staticId = \"rssbox-static-stylesheet\";\n    const dynamicId = \"rssbox-dynamic-stylesheet\";\n\n    let staticCss = window[staticId];\n    let dynamicCss = window[dynamicId];\n\n    if (!staticCss) {\n      staticCss = document.createElement(\"link\");\n      staticCss.href = `${urls.app}/assets/box.css`;\n      staticCss.id = staticId;\n      staticCss.rel = \"stylesheet\";\n      document.head.appendChild(staticCss);\n    }\n\n    if (!dynamicCss) {\n      dynamicCss = document.createElement(\"style\");\n      dynamicCss.id = dynamicId;\n      document.head.appendChild(dynamicCss);\n    }\n\n    config.subscribe(state => {\n      const color = state.linkColor;\n\n      if (!color) return;\n\n      let rule = `.rssbox[data-link-color=\"${color}\"] a {\n          color: ${color};\n        }`;\n\n      if (dynamicCss.innerHTML.indexOf(rule) < 0) dynamicCss.innerHTML += rule;\n    });\n  });\n\n  const kb = bytes => `${(bytes / 1000).toFixed(2)}\\u200akB`;\n\n  function load(data) {\n    return new Promise(fulfill => {\n      const image = new Image();\n\n      image.onload = () => {\n        const maxWidth = Math.min(100, image.width);\n        const factor = image.width > maxWidth ? maxWidth / image.width : 1;\n\n        fulfill({\n          width: `${image.width * factor}px`,\n          height: `${image.height * factor}px`\n        });\n      };\n\n      image.src = data.source;\n    });\n  }\n\n  $: height =\n    $config.height && $config.height > -1 ? `${$config.height}px` : \"100%\";\n  $: width = $config.width ? `${$config.width}px` : \"100%\";\n  $: itemTitleClass = !$config.compact ? \"bold\" : \"\";\n</script>\n\n<div\n  data-link-color={$config.linkColor}\n  class=\"rssbox rssBox\"\n  style=\"\n    max-width: {width};\n    border-color: {$config.frameColor};\n    border-radius: {$config.radius}px;\n    font: {$config.fontFace};\n    float: {$config.align};\n  \"\n>\n  {#if !$config.headless}\n    <div\n      class=\"rssbox-titlebar\"\n      style=\"\n        color: {$config.titleBarTextColor};\n        background-color: {$config.titleBarColor};\n        border-bottom-color: {$config.frameColor};\n      \"\n    >\n      {#if $config.showXmlButton}\n        <div class=\"rssbox-icon\">\n          <a\n            href={$config.url}\n            title=\"{$feed.format} {$feed.version}\"\n            style=\"color: {$config.titleBarTextColor}\"\n          >\n            <RssIcon />\n          </a>\n        </div>\n      {/if}\n      <div>\n        <a href={$feed.link} style=\"color: {$config.titleBarTextColor};\">\n          {$feed.title}\n        </a>\n      </div>\n      <div class=\"rssbox-date\">\n        {feed.formatDate($feed.date)}\n      </div>\n    </div>\n  {/if}\n\n  <div\n    class=\"rssbox-content rssBoxContent\"\n    style=\"background-color: {$config.boxFillColor}; height: {height};\"\n  >\n    {#if $feed.image && !$config.compact}\n      {#await load($feed.image) then image}\n        <a href={$feed.image.link} title={$feed.image.title}>\n          <div\n            alt={$feed.image.description}\n            class=\"rssbox-image\"\n            style=\"\n              background-image: url({$feed.image.source});\n              width: {image.width};\n              height: {image.height};\n            \"\n          />\n        </a>\n      {/await}\n    {/if}\n\n    {#each $feed.items as item, index}\n      {#if index < $config.maxItems}\n        <div\n          class=\"rssbox-item-content rssBoxItemContent\"\n          style=\"color: {$config.textColor}\"\n        >\n          {#if item.title}\n            <div class=\"rssbox-item-title {itemTitleClass}\">\n              {#if item.link}\n                <a href={item.link}>\n                  <!-- eslint-disable-next-line svelte/no-at-html-tags -->\n                  {@html item.title}\n                </a>\n              {:else}\n                <!-- eslint-disable-next-line svelte/no-at-html-tags -->\n                {@html item.title}\n              {/if}\n            </div>\n          {/if}\n\n          {#if !$config.compact}\n            <aside>\n              {#if item.source}\n                <a\n                  href={item.source.url}\n                  title={item.source.title}\n                  class=\"rssbox-source\"\n                >\n                  {#if item.source.url.endsWith(\".xml\")}\n                    <RssIcon />\n                  {:else}\n                    <LinkIcon />\n                  {/if}\n                </a>\n              {/if}\n\n              {#if item.enclosures}\n                {#each item.enclosures as enclosure}\n                  <a\n                    href={enclosure.url}\n                    title=\"{kb(enclosure.length)} {enclosure.type}\"\n                    class=\"rssbox-enclosure\"\n                  >\n                    <PaperclipIcon />\n                  </a>\n                {/each}\n              {/if}\n            </aside>\n            <!-- eslint-disable-next-line svelte/no-at-html-tags -->\n            {@html item.description}\n          {/if}\n        </div>\n      {/if}\n    {/each}\n\n    {#if $feed.input}\n      <form class=\"rssbox-form\" method=\"get\" action={$feed.input.link}>\n        <input\n          type=\"text\"\n          name={$feed.input.name}\n          placeholder=\"Enter search &amp; hit return…\"\n          data-placeholder={$feed.input.description}\n        />\n      </form>\n    {/if}\n    <div class=\"rssbox-promo rssBoxPromo\">\n      <a href={urls.app} style=\"color: {$config.textColor}\">\n        RSS Box by p3k.org\n      </a>\n    </div>\n  </div>\n</div>\n\n<style>\n  .rssbox {\n    box-sizing: border-box;\n    width: 100%;\n    border: 1px solid #000;\n    font-family: sans-serif;\n    overflow: hidden;\n    border-radius: 0;\n    -moz-border-radius: 0; /* stylelint-disable-line property-no-vendor-prefix */\n  }\n\n  .rssbox-icon {\n    float: right;\n    width: 1em;\n    margin-left: 0.5em;\n  }\n\n  .rssbox-titlebar {\n    padding: 0.5em;\n    color: #000;\n    background-color: #add8e6;\n    border-bottom: 1px solid #000;\n    font-weight: bold;\n    letter-spacing: 0.01em;\n  }\n\n  .rssbox-date {\n    margin-top: 0.2em;\n    font-size: 0.8em;\n    font-weight: normal;\n  }\n\n  .rssbox-content {\n    height: auto;\n    padding: 0.5em;\n    overflow-x: hidden;\n    overflow-y: auto;\n    background-color: #fff;\n    clear: both;\n    -ms-overflow-style: -ms-autohiding-scrollbar;\n  }\n\n  .rssbox-content aside {\n    clear: both;\n    float: right;\n  }\n\n  .rssbox-content aside a {\n    display: block;\n    margin-left: 0.5em;\n  }\n\n  .rssbox-image {\n    float: right;\n    margin: 0 0 0.5em 0.5em;\n    background-position: left center;\n    background-repeat: no-repeat;\n    background-size: contain;\n  }\n\n  .rssbox-item-title.bold {\n    font-weight: bold;\n  }\n\n  .rssbox-enclosure,\n  .rssbox-source {\n    display: block;\n    width: 1em;\n  }\n\n  .rssbox-form {\n    margin-bottom: 0.8em;\n  }\n\n  .rssbox-form input {\n    padding: 0.5em;\n    background-color: #fff;\n  }\n\n  .rssbox-promo {\n    text-align: right;\n    font-size: 0.7em;\n    letter-spacing: 0.01em;\n  }\n</style>\n","import ready from \"domready\";\n\nimport { ConfigStore, FeedStore } from \"./stores\";\nimport { urls } from \"./urls\";\nimport getNativeObject from \"./native.js\";\n\nimport Box from \"./Box.svelte\";\n\n// These are backwards-compatible settings\nconst defaults = {\n  align: \"initial\",\n  boxFillColor: \"#fff\",\n  compact: false,\n  fontFace: \"inherit\",\n  frameColor: \"#000\",\n  headless: false,\n  height: \"\",\n  linkColor: \"\",\n  maxItems: 7,\n  radius: 0,\n  showXmlButton: false,\n  textColor: \"#000\",\n  titleBarColor: \"#add8e6\",\n  titleBarTextColor: \"#000\",\n  width: \"200\"\n};\n\nconst keys = [...Object.keys(defaults), \"url\"];\n\nready(() => {\n  const reduce = getNativeObject(\"Array\").prototype.reduce;\n\n  const getNativeValue = value => {\n    if (value === \"true\") return true;\n    if (value === \"false\") return false;\n    return value;\n  };\n\n  const parseQuery = query => {\n    const parts = query.split(\"&\");\n    return reduce.call(\n      parts,\n      (data, pair) => {\n        const [key, value] = pair.split(\"=\");\n        if (keys.indexOf(key) > -1) {\n          data[key] = getNativeValue(decodeURIComponent(value));\n        }\n        return data;\n      },\n      {}\n    );\n  };\n\n  // Earlier versions used protocol-less URLs like `//p3k.org/rss`\n  const search = urls.app.replace(/^https?:/, \"\");\n  const scripts = Array.apply(\n    null,\n    document.querySelectorAll(`script[src*=\"${search}\"]`)\n  );\n  const feedUrls = [];\n\n  scripts.forEach(script => {\n    const query = script.src.split(\"?\")[1];\n\n    if (!query) return;\n\n    let data = parseQuery(query);\n\n    if (!data.url) data.url = urls.feed;\n\n    data = Object.assign({}, defaults, data);\n\n    // Create new stores for each box to prevent multiple boxes getting the same data\n    const feed = FeedStore();\n    const config = ConfigStore();\n\n    config.set(data);\n    feed.fetch(data.url, feed);\n\n    const parent = script.parentNode;\n    const container = document.createElement(\"div\");\n\n    parent.insertBefore(container, script);\n\n    void new Box({\n      target: container,\n      props: { feed, config }\n    });\n\n    // Only for IE11\n    script.parentNode.removeChild(script);\n\n    if (data.url !== urls.feed && feedUrls.indexOf(data.url) < 0) {\n      feedUrls.push(data.url);\n    }\n  });\n\n  if (location.href.indexOf(urls.app) < 0) {\n    const metadata = JSON.stringify({ feedUrls });\n    fetch(\n      `${urls.referrers}&url=${encodeURIComponent(\n        location.href\n      )}&metadata=${encodeURIComponent(metadata)}`\n    );\n  }\n});\n","// Retrieve native objects without any extensions (e.g. by PrototypeJS)\nexport default function getNativeObject(native) {\n  var iframe = document.createElement(\"iframe\");\n  document.body.appendChild(iframe);\n  var retrieved = iframe.contentWindow[native];\n  document.body.removeChild(iframe);\n  return retrieved;\n}\n"],"names":["listener","fns","doc","hack","domContentLoaded","loaded","exports","document","documentElement","doScroll","test","readyState","addEventListener","removeEventListener","shift","fn","setTimeout","push","noop","run","blank_object","Object","create","run_all","forEach","is_function","thing","safe_not_equal","a","b","_typeof","subscribe","store","_len","arguments","length","callbacks","Array","_key","_step","_iterator","_createForOfIteratorHelper","s","n","done","callback","value","undefined","err","e","f","unsub","apply","unsubscribe","append","target","node","appendChild","append_styles","style_sheet_id","styles","append_styles_to","root","getRootNode","ownerDocument","host","get_root_for_style","getElementById","style","element","id","textContent","head","sheet","append_stylesheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","d","name","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","set_style","key","important","removeProperty","setProperty","current_component","HtmlTag","is_svg","_classCallCheck","_defineProperty","this","_createClass","html","h","nodeName","nodeType","t","tagName","content","c","innerHTML","from","childNodes","set_current_component","component","get_current_component","Error","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","pop","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outros","outroing","group_outros","r","check_outros","transition_in","block","local","delete","transition_out","o","handle_promise","promise","info","token","type","index","resolved","child_ctx","slice","current","needs_flush","blocks","m","mount","then","error","catch","hasCatch","pending","ensure_array_like","array_like_or_iterator","create_component","mount_component","_component$$$","_component$$$$on_dest","new_on_destroy","on_mount","map","filter","on_destroy","_toConsumableArray","destroy_component","filtered","targets","indexOf","flush_render_callbacks","make_dirty","fill","init","options","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","skip_bound","ready","ret","hydrate","nodes","children","l","intro","concat","SvelteComponent","$destroy","splice","obj","$$set","keys","subscriber_queue","writable","stop","start","subscribers","set","new_value","run_queue","subscriber","size","urls","baseUrl","app","proxy","referrers","feed","localUrls","defaultError","loading","compact","maxItems","format","version","title","description","image","items","RssParser","DC_NAMESPACE","ISO_DATE_PATTERN","getChildElement","parent","namespace","method","getText","addItemExtensions","item","source","enclosures","getElementsByTagName","category","url","enclosure","domain","getDate","str","millis","Date","parse","isNaN","String","replace","now","xml","implementation","createDocument","DOMParser","parseFromString","window","ActiveXObject","async","loadXML","getDocument","rss","link","date","parseAtom","channel","imageUrl","width","height","trim","RegExp","parseScriptingNews","getAttributeNS","getElementsByTagNameNS","rights","textInput","input","parseRss","statusCodes","ObjectStore","defaultState","_writable","_update","newState","state","fetchFeed","headers","Headers","Accept","join","fetch","encodeURIComponent","referrerPolicy","res","status","json","_objectSpread","message","assign","console","formatDate","month","getMonth","toString","padStart","day","hours","getHours","minutes","getMinutes","getFullYear","FeedStore","bind","svg","g","polygon0","polygon1","hosts","reduce","accu","startsWith","split","hits","total","metadata","feedUrls","percentage","sort","__svelte","v","path","t1_value","t3_value","if_block","showXmlButton","create_if_block_10","a_href_value","titleBarTextColor","div2","titleBarColor","frameColor","div0","div1","t1","t3","a_title_value","div","load","if_block0","create_if_block_6","if_block1","create_if_block_2","textColor","create_if_block_7","raw_value","html_tag","create_if_block_4","create_if_block_3","aside","show_if","endsWith","each_value_1","each_blocks","create_if_block_1","form","headless","create_if_block_9","create_if_block_8","each_value","if_block2","create_if_block","boxFillColor","div2_data_link_color_value","linkColor","radius","fontFace","align","fulfill","Image","onload","maxWidth","Math","min","factor","src","$$props","config","staticId","dynamicId","staticCss","dynamicCss","href","rel","color","rule","$$invalidate","$config","itemTitleClass","bytes","toFixed","defaults","native","iframe","body","retrieved","contentWindow","getNativeObject","prototype","search","scripts","querySelectorAll","script","query","parts","call","pair","_pair$split2","_slicedToArray","getNativeValue","decodeURIComponent","parseQuery","container","Box","location","JSON","stringify"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,18,19]}